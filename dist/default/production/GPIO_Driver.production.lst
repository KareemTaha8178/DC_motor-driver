

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Sep 19 22:58:36 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   00F827                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_register
    64   00F827  80                 	db	128
    65   00F828  0F                 	db	15
    66   00F829  81                 	db	129
    67   00F82A  0F                 	db	15
    68   00F82B  82                 	db	130
    69   00F82C  0F                 	db	15
    70   00F82D  83                 	db	131
    71   00F82E  0F                 	db	15
    72   00F82F  84                 	db	132
    73   00F830  0F                 	db	15
    74                           
    75                           ;initializer for _lat_register
    76   00F831  89                 	db	137
    77   00F832  0F                 	db	15
    78   00F833  8A                 	db	138
    79   00F834  0F                 	db	15
    80   00F835  8B                 	db	139
    81   00F836  0F                 	db	15
    82   00F837  8C                 	db	140
    83   00F838  0F                 	db	15
    84   00F839  8D                 	db	141
    85   00F83A  0F                 	db	15
    86                           
    87                           ;initializer for _tris_register
    88   00F83B  92                 	db	146
    89   00F83C  0F                 	db	15
    90   00F83D  93                 	db	147
    91   00F83E  0F                 	db	15
    92   00F83F  94                 	db	148
    93   00F840  0F                 	db	15
    94   00F841  95                 	db	149
    95   00F842  0F                 	db	15
    96   00F843  96                 	db	150
    97   00F844  0F                 	db	15
    98                           
    99                           ;initializer for _ret
   100   00F845  01                 	db	1
   101                           
   102                           ;initializer for _dc_motor_2
   103   00F846  22                 	db	34
   104   00F847  32                 	db	50
   105                           
   106                           ;initializer for _dc_motor_1
   107   00F848  02                 	db	2
   108   00F849  12                 	db	18
   109   000000                     _PORTE	set	3972
   110   000000                     _PORTD	set	3971
   111   000000                     _PORTC	set	3970
   112   000000                     _PORTB	set	3969
   113   000000                     _PORTA	set	3968
   114   000000                     _LATA	set	3977
   115   000000                     _TRISA	set	3986
   116   000000                     _TRISE	set	3990
   117   000000                     _TRISD	set	3989
   118   000000                     _TRISC	set	3988
   119   000000                     _TRISB	set	3987
   120   000000                     _LATE	set	3981
   121   000000                     _LATD	set	3980
   122   000000                     _LATC	set	3979
   123   000000                     _LATB	set	3978
   124                           
   125                           ; #config settings
   126                           
   127                           	psect	cinit
   128   00F84A                     __pcinit:
   129                           	callstack 0
   130   00F84A                     start_initialization:
   131                           	callstack 0
   132   00F84A                     __initialization:
   133                           	callstack 0
   134                           
   135                           ; Initialize objects allocated to COMRAM (35 bytes)
   136                           ; load TBLPTR registers with __pidataCOMRAM
   137   00F84A  0E27               	movlw	low __pidataCOMRAM
   138   00F84C  6EF6               	movwf	tblptrl,c
   139   00F84E  0EF8               	movlw	high __pidataCOMRAM
   140   00F850  6EF7               	movwf	tblptrh,c
   141   00F852  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   142   00F854  6EF8               	movwf	tblptru,c
   143   00F856  EE00  F001         	lfsr	0,__pdataCOMRAM
   144   00F85A  EE10 F023          	lfsr	1,35
   145   00F85E                     copy_data0:
   146   00F85E  0009               	tblrd		*+
   147   00F860  CFF5 FFEE          	movff	tablat,postinc0
   148   00F864  50E5               	movf	postdec1,w,c
   149   00F866  50E1               	movf	fsr1l,w,c
   150   00F868  E1FA               	bnz	copy_data0
   151                           
   152                           ; Clear objects allocated to COMRAM (15 bytes)
   153   00F86A  EE00  F036         	lfsr	0,__pbssCOMRAM
   154   00F86E  0E0F               	movlw	15
   155   00F870                     clear_0:
   156   00F870  6AEE               	clrf	postinc0,c
   157   00F872  06E8               	decf	wreg,f,c
   158   00F874  E1FD               	bnz	clear_0
   159   00F876                     end_of_initialization:
   160                           	callstack 0
   161   00F876                     __end_of__initialization:
   162                           	callstack 0
   163   00F876  0E00               	movlw	low (__Lmediumconst shr (0+16))
   164   00F878  6EF8               	movwf	tblptru,c
   165   00F87A  0100               	movlb	0
   166   00F87C  EF19  F07E         	goto	_main	;jump to C main() function
   167                           
   168                           	psect	bssCOMRAM
   169   000036                     __pbssCOMRAM:
   170                           	callstack 0
   171   000036                     relay_turn_off@F2880:
   172                           	callstack 0
   173   000036                     	ds	1
   174   000037                     relay_turn_on@F2875:
   175                           	callstack 0
   176   000037                     	ds	1
   177   000038                     relay_initialize@F2870:
   178                           	callstack 0
   179   000038                     	ds	1
   180   000039                     led_toggle_logic@F2891:
   181                           	callstack 0
   182   000039                     	ds	1
   183   00003A                     led_turn_off@F2886:
   184                           	callstack 0
   185   00003A                     	ds	1
   186   00003B                     led_turn_on@F2881:
   187                           	callstack 0
   188   00003B                     	ds	1
   189   00003C                     led_initialize@F2876:
   190                           	callstack 0
   191   00003C                     	ds	1
   192   00003D                     Dc_motor_stop@F2900:
   193                           	callstack 0
   194   00003D                     	ds	1
   195   00003E                     Dc_motor_stop@F2898:
   196                           	callstack 0
   197   00003E                     	ds	1
   198   00003F                     Dc_motor_turn_right@F2893:
   199                           	callstack 0
   200   00003F                     	ds	1
   201   000040                     Dc_motor_turn_right@F2891:
   202                           	callstack 0
   203   000040                     	ds	1
   204   000041                     Dc_motor_turn_left@F2886:
   205                           	callstack 0
   206   000041                     	ds	1
   207   000042                     Dc_motor_turn_left@F2884:
   208                           	callstack 0
   209   000042                     	ds	1
   210   000043                     Dc_motor_initialize@F2877:
   211                           	callstack 0
   212   000043                     	ds	1
   213   000044                     Dc_motor_initialize@F2875:
   214                           	callstack 0
   215   000044                     	ds	1
   216                           
   217                           	psect	dataCOMRAM
   218   000001                     __pdataCOMRAM:
   219                           	callstack 0
   220   000001                     _port_register:
   221                           	callstack 0
   222   000001                     	ds	10
   223   00000B                     _lat_register:
   224                           	callstack 0
   225   00000B                     	ds	10
   226   000015                     _tris_register:
   227                           	callstack 0
   228   000015                     	ds	10
   229   00001F                     _ret:
   230                           	callstack 0
   231   00001F                     	ds	1
   232   000020                     _dc_motor_2:
   233                           	callstack 0
   234   000020                     	ds	2
   235   000022                     _dc_motor_1:
   236                           	callstack 0
   237   000022                     	ds	2
   238                           
   239                           	psect	cstackCOMRAM
   240   000024                     __pcstackCOMRAM:
   241                           	callstack 0
   242   000024                     gpio_pin_direction_init@_pin_config_t:
   243                           	callstack 0
   244   000024                     gpio_pin_write_logic@_pin_config_t:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x0
   248   000024                     	ds	2
   249   000026                     ??_gpio_pin_direction_init:
   250   000026                     gpio_pin_write_logic@logic:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x2
   254   000026                     	ds	1
   255   000027                     ??_gpio_pin_write_logic:
   256                           
   257                           ; 1 bytes @ 0x3
   258   000027                     	ds	5
   259   00002C                     gpio_pin_direction_init@ret:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x8
   263   00002C                     	ds	1
   264   00002D                     Dc_motor_initialize@_dc_motor:
   265                           	callstack 0
   266   00002D                     Dc_motor_turn_left@_dc_motor:
   267                           	callstack 0
   268   00002D                     Dc_motor_turn_right@_dc_motor:
   269                           	callstack 0
   270   00002D                     Dc_motor_stop@_dc_motor:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x9
   274   00002D                     	ds	2
   275   00002F                     ??_Dc_motor_initialize:
   276   00002F                     ??_Dc_motor_turn_left:
   277   00002F                     ??_Dc_motor_turn_right:
   278   00002F                     ??_Dc_motor_stop:
   279                           
   280                           ; 1 bytes @ 0xB
   281   00002F                     	ds	1
   282   000030                     Dc_motor_initialize@ret:
   283                           	callstack 0
   284   000030                     Dc_motor_turn_left@logic_pin_1:
   285                           	callstack 0
   286   000030                     Dc_motor_turn_right@dc_motor_pin_1:
   287                           	callstack 0
   288   000030                     Dc_motor_stop@dc_motor_pin_1:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0xC
   292   000030                     	ds	1
   293   000031                     Dc_motor_initialize@dc_motor_pin_1:
   294                           	callstack 0
   295   000031                     Dc_motor_turn_left@logic_pin_2:
   296                           	callstack 0
   297   000031                     Dc_motor_turn_right@dc_motor_pin_2:
   298                           	callstack 0
   299   000031                     Dc_motor_stop@dc_motor_pin_2:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0xD
   303   000031                     	ds	1
   304   000032                     Dc_motor_initialize@dc_motor_pin_2:
   305                           	callstack 0
   306   000032                     Dc_motor_turn_left@dc_motor_pin_1:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xE
   310   000032                     	ds	1
   311   000033                     Dc_motor_turn_left@dc_motor_pin_2:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0xF
   315   000033                     	ds	1
   316   000034                     ??_main:
   317                           
   318                           ; 1 bytes @ 0x10
   319   000034                     	ds	2
   320                           
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 31 in file "Application.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  2  259[None  ] int 
   333 ;; Registers used:
   334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   344 ;;Total ram usage:        2 bytes
   345 ;; Hardware stack levels required when called: 3
   346 ;; This function calls:
   347 ;;		_Application_initialize
   348 ;;		_Dc_motor_stop
   349 ;;		_Dc_motor_turn_left
   350 ;;		_Dc_motor_turn_right
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text0
   357   00FC32                     __ptext0:
   358                           	callstack 0
   359   00FC32                     _main:
   360                           	callstack 28
   361   00FC32                     
   362                           ;Application.c: 32:     Application_initialize();
   363   00FC32  EC04  F07C         	call	_Application_initialize	;wreg free
   364   00FC36                     l260:
   365                           
   366                           ;Application.c: 34:         Dc_motor_turn_left(&dc_motor_1);
   367   00FC36  0E22               	movlw	low _dc_motor_1
   368   00FC38  6E2D               	movwf	Dc_motor_turn_left@_dc_motor^0,c
   369   00FC3A  0E00               	movlw	high _dc_motor_1
   370   00FC3C  6E2E               	movwf	(Dc_motor_turn_left@_dc_motor+1)^0,c
   371   00FC3E  EC20  F07D         	call	_Dc_motor_turn_left	;wreg free
   372   00FC42                     
   373                           ;Application.c: 35:         _delay(5000000);
   374   00FC42  0E1A               	movlw	26
   375   00FC44  6E35               	movwf	(??_main+1)^0,c
   376   00FC46  0E5E               	movlw	94
   377   00FC48  6E34               	movwf	??_main^0,c
   378   00FC4A  0E6E               	movlw	110
   379   00FC4C                     u1017:
   380   00FC4C  2EE8               	decfsz	wreg,f,c
   381   00FC4E  D7FE               	bra	u1017
   382   00FC50  2E34               	decfsz	??_main^0,f,c
   383   00FC52  D7FC               	bra	u1017
   384   00FC54  2E35               	decfsz	(??_main+1)^0,f,c
   385   00FC56  D7FA               	bra	u1017
   386   00FC58  D000               	nop2	
   387   00FC5A                     
   388                           ;Application.c: 36:         Dc_motor_turn_left(&dc_motor_2);
   389   00FC5A  0E20               	movlw	low _dc_motor_2
   390   00FC5C  6E2D               	movwf	Dc_motor_turn_left@_dc_motor^0,c
   391   00FC5E  0E00               	movlw	high _dc_motor_2
   392   00FC60  6E2E               	movwf	(Dc_motor_turn_left@_dc_motor+1)^0,c
   393   00FC62  EC20  F07D         	call	_Dc_motor_turn_left	;wreg free
   394                           
   395                           ;Application.c: 37:         _delay(5000000);
   396   00FC66  0E1A               	movlw	26
   397   00FC68  6E35               	movwf	(??_main+1)^0,c
   398   00FC6A  0E5E               	movlw	94
   399   00FC6C  6E34               	movwf	??_main^0,c
   400   00FC6E  0E6E               	movlw	110
   401   00FC70                     u1027:
   402   00FC70  2EE8               	decfsz	wreg,f,c
   403   00FC72  D7FE               	bra	u1027
   404   00FC74  2E34               	decfsz	??_main^0,f,c
   405   00FC76  D7FC               	bra	u1027
   406   00FC78  2E35               	decfsz	(??_main+1)^0,f,c
   407   00FC7A  D7FA               	bra	u1027
   408   00FC7C  D000               	nop2	
   409   00FC7E                     
   410                           ;Application.c: 38:         Dc_motor_stop(&dc_motor_1);
   411   00FC7E  0E22               	movlw	low _dc_motor_1
   412   00FC80  6E2D               	movwf	Dc_motor_stop@_dc_motor^0,c
   413   00FC82  0E00               	movlw	high _dc_motor_1
   414   00FC84  6E2E               	movwf	(Dc_motor_stop@_dc_motor+1)^0,c
   415   00FC86  EC40  F07C         	call	_Dc_motor_stop	;wreg free
   416   00FC8A                     
   417                           ;Application.c: 39:         _delay(5000000);
   418   00FC8A  0E1A               	movlw	26
   419   00FC8C  6E35               	movwf	(??_main+1)^0,c
   420   00FC8E  0E5E               	movlw	94
   421   00FC90  6E34               	movwf	??_main^0,c
   422   00FC92  0E6E               	movlw	110
   423   00FC94                     u1037:
   424   00FC94  2EE8               	decfsz	wreg,f,c
   425   00FC96  D7FE               	bra	u1037
   426   00FC98  2E34               	decfsz	??_main^0,f,c
   427   00FC9A  D7FC               	bra	u1037
   428   00FC9C  2E35               	decfsz	(??_main+1)^0,f,c
   429   00FC9E  D7FA               	bra	u1037
   430   00FCA0  D000               	nop2	
   431                           
   432                           ;Application.c: 40:         Dc_motor_stop(&dc_motor_2);
   433   00FCA2  0E20               	movlw	low _dc_motor_2
   434   00FCA4  6E2D               	movwf	Dc_motor_stop@_dc_motor^0,c
   435   00FCA6  0E00               	movlw	high _dc_motor_2
   436   00FCA8  6E2E               	movwf	(Dc_motor_stop@_dc_motor+1)^0,c
   437   00FCAA  EC40  F07C         	call	_Dc_motor_stop	;wreg free
   438   00FCAE                     
   439                           ;Application.c: 41:         _delay(5000000);
   440   00FCAE  0E1A               	movlw	26
   441   00FCB0  6E35               	movwf	(??_main+1)^0,c
   442   00FCB2  0E5E               	movlw	94
   443   00FCB4  6E34               	movwf	??_main^0,c
   444   00FCB6  0E6E               	movlw	110
   445   00FCB8                     u1047:
   446   00FCB8  2EE8               	decfsz	wreg,f,c
   447   00FCBA  D7FE               	bra	u1047
   448   00FCBC  2E34               	decfsz	??_main^0,f,c
   449   00FCBE  D7FC               	bra	u1047
   450   00FCC0  2E35               	decfsz	(??_main+1)^0,f,c
   451   00FCC2  D7FA               	bra	u1047
   452   00FCC4  D000               	nop2	
   453   00FCC6                     
   454                           ;Application.c: 42:         Dc_motor_turn_right(&dc_motor_1);
   455   00FCC6  0E22               	movlw	low _dc_motor_1
   456   00FCC8  6E2D               	movwf	Dc_motor_turn_right@_dc_motor^0,c
   457   00FCCA  0E00               	movlw	high _dc_motor_1
   458   00FCCC  6E2E               	movwf	(Dc_motor_turn_right@_dc_motor+1)^0,c
   459   00FCCE  ECB0  F07C         	call	_Dc_motor_turn_right	;wreg free
   460                           
   461                           ;Application.c: 43:         _delay(5000000);
   462   00FCD2  0E1A               	movlw	26
   463   00FCD4  6E35               	movwf	(??_main+1)^0,c
   464   00FCD6  0E5E               	movlw	94
   465   00FCD8  6E34               	movwf	??_main^0,c
   466   00FCDA  0E6E               	movlw	110
   467   00FCDC                     u1057:
   468   00FCDC  2EE8               	decfsz	wreg,f,c
   469   00FCDE  D7FE               	bra	u1057
   470   00FCE0  2E34               	decfsz	??_main^0,f,c
   471   00FCE2  D7FC               	bra	u1057
   472   00FCE4  2E35               	decfsz	(??_main+1)^0,f,c
   473   00FCE6  D7FA               	bra	u1057
   474   00FCE8  D000               	nop2	
   475   00FCEA                     
   476                           ;Application.c: 44:         Dc_motor_turn_right(&dc_motor_2);
   477   00FCEA  0E20               	movlw	low _dc_motor_2
   478   00FCEC  6E2D               	movwf	Dc_motor_turn_right@_dc_motor^0,c
   479   00FCEE  0E00               	movlw	high _dc_motor_2
   480   00FCF0  6E2E               	movwf	(Dc_motor_turn_right@_dc_motor+1)^0,c
   481   00FCF2  ECB0  F07C         	call	_Dc_motor_turn_right	;wreg free
   482   00FCF6                     
   483                           ;Application.c: 45:         _delay(5000000);
   484   00FCF6  0E1A               	movlw	26
   485   00FCF8  6E35               	movwf	(??_main+1)^0,c
   486   00FCFA  0E5E               	movlw	94
   487   00FCFC  6E34               	movwf	??_main^0,c
   488   00FCFE  0E6E               	movlw	110
   489   00FD00                     u1067:
   490   00FD00  2EE8               	decfsz	wreg,f,c
   491   00FD02  D7FE               	bra	u1067
   492   00FD04  2E34               	decfsz	??_main^0,f,c
   493   00FD06  D7FC               	bra	u1067
   494   00FD08  2E35               	decfsz	(??_main+1)^0,f,c
   495   00FD0A  D7FA               	bra	u1067
   496   00FD0C  D000               	nop2	
   497                           
   498                           ;Application.c: 46:         Dc_motor_stop(&dc_motor_1);
   499   00FD0E  0E22               	movlw	low _dc_motor_1
   500   00FD10  6E2D               	movwf	Dc_motor_stop@_dc_motor^0,c
   501   00FD12  0E00               	movlw	high _dc_motor_1
   502   00FD14  6E2E               	movwf	(Dc_motor_stop@_dc_motor+1)^0,c
   503   00FD16  EC40  F07C         	call	_Dc_motor_stop	;wreg free
   504   00FD1A                     
   505                           ;Application.c: 47:         _delay(5000000);
   506   00FD1A  0E1A               	movlw	26
   507   00FD1C  6E35               	movwf	(??_main+1)^0,c
   508   00FD1E  0E5E               	movlw	94
   509   00FD20  6E34               	movwf	??_main^0,c
   510   00FD22  0E6E               	movlw	110
   511   00FD24                     u1077:
   512   00FD24  2EE8               	decfsz	wreg,f,c
   513   00FD26  D7FE               	bra	u1077
   514   00FD28  2E34               	decfsz	??_main^0,f,c
   515   00FD2A  D7FC               	bra	u1077
   516   00FD2C  2E35               	decfsz	(??_main+1)^0,f,c
   517   00FD2E  D7FA               	bra	u1077
   518   00FD30  D000               	nop2	
   519   00FD32                     
   520                           ;Application.c: 48:         Dc_motor_stop(&dc_motor_2);
   521   00FD32  0E20               	movlw	low _dc_motor_2
   522   00FD34  6E2D               	movwf	Dc_motor_stop@_dc_motor^0,c
   523   00FD36  0E00               	movlw	high _dc_motor_2
   524   00FD38  6E2E               	movwf	(Dc_motor_stop@_dc_motor+1)^0,c
   525   00FD3A  EC40  F07C         	call	_Dc_motor_stop	;wreg free
   526                           
   527                           ;Application.c: 49:         _delay(5000000);
   528   00FD3E  0E1A               	movlw	26
   529   00FD40  6E35               	movwf	(??_main+1)^0,c
   530   00FD42  0E5E               	movlw	94
   531   00FD44  6E34               	movwf	??_main^0,c
   532   00FD46  0E6E               	movlw	110
   533   00FD48                     u1087:
   534   00FD48  2EE8               	decfsz	wreg,f,c
   535   00FD4A  D7FE               	bra	u1087
   536   00FD4C  2E34               	decfsz	??_main^0,f,c
   537   00FD4E  D7FC               	bra	u1087
   538   00FD50  2E35               	decfsz	(??_main+1)^0,f,c
   539   00FD52  D7FA               	bra	u1087
   540   00FD54  D000               	nop2	
   541   00FD56  EF1B  F07E         	goto	l260
   542   00FD5A  EF00  F000         	goto	start
   543   00FD5E                     __end_of_main:
   544                           	callstack 0
   545                           
   546 ;; *************** function _Dc_motor_turn_right *****************
   547 ;; Defined at:
   548 ;;		line 92 in file "ECU_Layer/ecu_dc_motor/ecu_motor.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  _dc_motor       2    9[COMRAM] PTR const struct .
   551 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  dc_motor_pin    1   13[COMRAM] struct .
   554 ;;  dc_motor_pin    1   12[COMRAM] struct .
   555 ;;  ret             1    0        unsigned char 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      unsigned char 
   558 ;; Registers used:
   559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;Total ram usage:        5 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; Hardware stack levels required when called: 1
   572 ;; This function calls:
   573 ;;		_gpio_pin_write_logic
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text1
   580   00F960                     __ptext1:
   581                           	callstack 0
   582   00F960                     _Dc_motor_turn_right:
   583                           	callstack 29
   584   00F960                     
   585                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 94:     if(_dc_motor == ((void*)0)) ret = (STD_Retu
      +                          rnType)0x00;
   586   00F960  502D               	movf	Dc_motor_turn_right@_dc_motor^0,w,c
   587   00F962  102E               	iorwf	(Dc_motor_turn_right@_dc_motor+1)^0,w,c
   588   00F964  A4D8               	btfss	status,2,c
   589   00F966  EFB7  F07C         	goto	u821
   590   00F96A  EFB9  F07C         	goto	u820
   591   00F96E                     u821:
   592   00F96E  EFBB  F07C         	goto	l48
   593   00F972                     u820:
   594   00F972  EF1F  F07D         	goto	l54
   595   00F976                     l48:
   596                           
   597                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 96:         pin_config_t dc_motor_pin_1 = {
   598   00F976  C040  F030         	movff	Dc_motor_turn_right@F2891,Dc_motor_turn_right@dc_motor_pin_1
   599   00F97A  C02D  FFD9         	movff	Dc_motor_turn_right@_dc_motor,fsr2l
   600   00F97E  C02E  FFDA         	movff	Dc_motor_turn_right@_dc_motor+1,fsr2h
   601   00F982  50DF               	movf	223,w,c
   602   00F984  0B0F               	andlw	15
   603   00F986  6E2F               	movwf	??_Dc_motor_turn_right^0,c
   604   00F988  5030               	movf	Dc_motor_turn_right@dc_motor_pin_1^0,w,c
   605   00F98A  182F               	xorwf	??_Dc_motor_turn_right^0,w,c
   606   00F98C  0BF8               	andlw	-8
   607   00F98E  182F               	xorwf	??_Dc_motor_turn_right^0,w,c
   608   00F990  6E30               	movwf	Dc_motor_turn_right@dc_motor_pin_1^0,c
   609   00F992  C02D  FFD9         	movff	Dc_motor_turn_right@_dc_motor,fsr2l
   610   00F996  C02E  FFDA         	movff	Dc_motor_turn_right@_dc_motor+1,fsr2h
   611   00F99A  38DF               	swapf	223,w,c
   612   00F99C  0B07               	andlw	7
   613   00F99E  6E2F               	movwf	??_Dc_motor_turn_right^0,c
   614   00F9A0  462F               	rlncf	??_Dc_motor_turn_right^0,f,c
   615   00F9A2  462F               	rlncf	??_Dc_motor_turn_right^0,f,c
   616   00F9A4  462F               	rlncf	??_Dc_motor_turn_right^0,f,c
   617   00F9A6  5030               	movf	Dc_motor_turn_right@dc_motor_pin_1^0,w,c
   618   00F9A8  182F               	xorwf	??_Dc_motor_turn_right^0,w,c
   619   00F9AA  0BC7               	andlw	-57
   620   00F9AC  182F               	xorwf	??_Dc_motor_turn_right^0,w,c
   621   00F9AE  6E30               	movwf	Dc_motor_turn_right@dc_motor_pin_1^0,c
   622   00F9B0  9C30               	bcf	Dc_motor_turn_right@dc_motor_pin_1^0,6,c
   623   00F9B2  C02D  FFD9         	movff	Dc_motor_turn_right@_dc_motor,fsr2l
   624   00F9B6  C02E  FFDA         	movff	Dc_motor_turn_right@_dc_motor+1,fsr2h
   625   00F9BA  AEDF               	btfss	indf2,7,c
   626   00F9BC  D002               	bra	u835
   627   00F9BE  8E30               	bsf	Dc_motor_turn_right@dc_motor_pin_1^0,7,c
   628   00F9C0  D001               	bra	u837
   629   00F9C2                     u835:
   630   00F9C2  9E30               	bcf	Dc_motor_turn_right@dc_motor_pin_1^0,7,c
   631   00F9C4                     u837:
   632   00F9C4                     
   633                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 102:         pin_config_t dc_motor_pin_2 = {
   634   00F9C4  C03F  F031         	movff	Dc_motor_turn_right@F2893,Dc_motor_turn_right@dc_motor_pin_2
   635   00F9C8  EE20 F001          	lfsr	2,1
   636   00F9CC  502D               	movf	Dc_motor_turn_right@_dc_motor^0,w,c
   637   00F9CE  26D9               	addwf	fsr2l,f,c
   638   00F9D0  502E               	movf	(Dc_motor_turn_right@_dc_motor+1)^0,w,c
   639   00F9D2  22DA               	addwfc	fsr2h,f,c
   640   00F9D4  50DF               	movf	223,w,c
   641   00F9D6  0B0F               	andlw	15
   642   00F9D8  6E2F               	movwf	??_Dc_motor_turn_right^0,c
   643   00F9DA  5031               	movf	Dc_motor_turn_right@dc_motor_pin_2^0,w,c
   644   00F9DC  182F               	xorwf	??_Dc_motor_turn_right^0,w,c
   645   00F9DE  0BF8               	andlw	-8
   646   00F9E0  182F               	xorwf	??_Dc_motor_turn_right^0,w,c
   647   00F9E2  6E31               	movwf	Dc_motor_turn_right@dc_motor_pin_2^0,c
   648   00F9E4  EE20 F001          	lfsr	2,1
   649   00F9E8  502D               	movf	Dc_motor_turn_right@_dc_motor^0,w,c
   650   00F9EA  26D9               	addwf	fsr2l,f,c
   651   00F9EC  502E               	movf	(Dc_motor_turn_right@_dc_motor+1)^0,w,c
   652   00F9EE  22DA               	addwfc	fsr2h,f,c
   653   00F9F0  38DF               	swapf	223,w,c
   654   00F9F2  0B07               	andlw	7
   655   00F9F4  6E2F               	movwf	??_Dc_motor_turn_right^0,c
   656   00F9F6  462F               	rlncf	??_Dc_motor_turn_right^0,f,c
   657   00F9F8  462F               	rlncf	??_Dc_motor_turn_right^0,f,c
   658   00F9FA  462F               	rlncf	??_Dc_motor_turn_right^0,f,c
   659   00F9FC  5031               	movf	Dc_motor_turn_right@dc_motor_pin_2^0,w,c
   660   00F9FE  182F               	xorwf	??_Dc_motor_turn_right^0,w,c
   661   00FA00  0BC7               	andlw	-57
   662   00FA02  182F               	xorwf	??_Dc_motor_turn_right^0,w,c
   663   00FA04  6E31               	movwf	Dc_motor_turn_right@dc_motor_pin_2^0,c
   664   00FA06  9C31               	bcf	Dc_motor_turn_right@dc_motor_pin_2^0,6,c
   665   00FA08  EE20 F001          	lfsr	2,1
   666   00FA0C  502D               	movf	Dc_motor_turn_right@_dc_motor^0,w,c
   667   00FA0E  26D9               	addwf	fsr2l,f,c
   668   00FA10  502E               	movf	(Dc_motor_turn_right@_dc_motor+1)^0,w,c
   669   00FA12  22DA               	addwfc	fsr2h,f,c
   670   00FA14  AEDF               	btfss	indf2,7,c
   671   00FA16  D002               	bra	u845
   672   00FA18  8E31               	bsf	Dc_motor_turn_right@dc_motor_pin_2^0,7,c
   673   00FA1A  D001               	bra	u847
   674   00FA1C                     u845:
   675   00FA1C  9E31               	bcf	Dc_motor_turn_right@dc_motor_pin_2^0,7,c
   676   00FA1E                     u847:
   677   00FA1E                     
   678                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 108:         gpio_pin_write_logic(&dc_motor_pin_1, 
      +                          GPIO_LOW);
   679   00FA1E  0E30               	movlw	low Dc_motor_turn_right@dc_motor_pin_1
   680   00FA20  6E24               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   681   00FA22  0E00               	movlw	high Dc_motor_turn_right@dc_motor_pin_1
   682   00FA24  6E25               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   683   00FA26  0E00               	movlw	0
   684   00FA28  6E26               	movwf	gpio_pin_write_logic@logic^0,c
   685   00FA2A  ECAF  F07E         	call	_gpio_pin_write_logic	;wreg free
   686   00FA2E                     
   687                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 109:         gpio_pin_write_logic(&dc_motor_pin_2, 
      +                          GPIO_HIGH);
   688   00FA2E  0E31               	movlw	low Dc_motor_turn_right@dc_motor_pin_2
   689   00FA30  6E24               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   690   00FA32  0E00               	movlw	high Dc_motor_turn_right@dc_motor_pin_2
   691   00FA34  6E25               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   692   00FA36  0E01               	movlw	1
   693   00FA38  6E26               	movwf	gpio_pin_write_logic@logic^0,c
   694   00FA3A  ECAF  F07E         	call	_gpio_pin_write_logic	;wreg free
   695   00FA3E                     l54:
   696   00FA3E  0012               	return		;funcret
   697   00FA40                     __end_of_Dc_motor_turn_right:
   698                           	callstack 0
   699                           
   700 ;; *************** function _Dc_motor_turn_left *****************
   701 ;; Defined at:
   702 ;;		line 60 in file "ECU_Layer/ecu_dc_motor/ecu_motor.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  _dc_motor       2    9[COMRAM] PTR const struct .
   705 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  dc_motor_pin    1   15[COMRAM] struct .
   708 ;;  dc_motor_pin    1   14[COMRAM] struct .
   709 ;;  ret             1    0        unsigned char 
   710 ;;  logic_pin_2     1   13[COMRAM] enum E2798
   711 ;;  logic_pin_1     1   12[COMRAM] enum E2798
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      unsigned char 
   714 ;; Registers used:
   715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;Total ram usage:        7 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; Hardware stack levels required when called: 1
   728 ;; This function calls:
   729 ;;		_gpio_pin_write_logic
   730 ;; This function is called by:
   731 ;;		_main
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text2
   736   00FA40                     __ptext2:
   737                           	callstack 0
   738   00FA40                     _Dc_motor_turn_left:
   739                           	callstack 29
   740   00FA40                     
   741                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 62:     logic_t logic_pin_1 = GPIO_HIGH;
   742   00FA40  0E01               	movlw	1
   743   00FA42  6E30               	movwf	Dc_motor_turn_left@logic_pin_1^0,c
   744                           
   745                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 63:     logic_t logic_pin_2 = GPIO_HIGH;
   746   00FA44  0E01               	movlw	1
   747   00FA46  6E31               	movwf	Dc_motor_turn_left@logic_pin_2^0,c
   748   00FA48                     
   749                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 64:     if(_dc_motor == ((void*)0)) ret = (STD_Retu
      +                          rnType)0x00;
   750   00FA48  502D               	movf	Dc_motor_turn_left@_dc_motor^0,w,c
   751   00FA4A  102E               	iorwf	(Dc_motor_turn_left@_dc_motor+1)^0,w,c
   752   00FA4C  A4D8               	btfss	status,2,c
   753   00FA4E  EF2B  F07D         	goto	u791
   754   00FA52  EF2D  F07D         	goto	u790
   755   00FA56                     u791:
   756   00FA56  EF2F  F07D         	goto	l39
   757   00FA5A                     u790:
   758   00FA5A  EF93  F07D         	goto	l45
   759   00FA5E                     l39:
   760                           
   761                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 66:         pin_config_t dc_motor_pin_1 = {
   762   00FA5E  C042  F032         	movff	Dc_motor_turn_left@F2884,Dc_motor_turn_left@dc_motor_pin_1
   763   00FA62  C02D  FFD9         	movff	Dc_motor_turn_left@_dc_motor,fsr2l
   764   00FA66  C02E  FFDA         	movff	Dc_motor_turn_left@_dc_motor+1,fsr2h
   765   00FA6A  50DF               	movf	223,w,c
   766   00FA6C  0B0F               	andlw	15
   767   00FA6E  6E2F               	movwf	??_Dc_motor_turn_left^0,c
   768   00FA70  5032               	movf	Dc_motor_turn_left@dc_motor_pin_1^0,w,c
   769   00FA72  182F               	xorwf	??_Dc_motor_turn_left^0,w,c
   770   00FA74  0BF8               	andlw	-8
   771   00FA76  182F               	xorwf	??_Dc_motor_turn_left^0,w,c
   772   00FA78  6E32               	movwf	Dc_motor_turn_left@dc_motor_pin_1^0,c
   773   00FA7A  C02D  FFD9         	movff	Dc_motor_turn_left@_dc_motor,fsr2l
   774   00FA7E  C02E  FFDA         	movff	Dc_motor_turn_left@_dc_motor+1,fsr2h
   775   00FA82  38DF               	swapf	223,w,c
   776   00FA84  0B07               	andlw	7
   777   00FA86  6E2F               	movwf	??_Dc_motor_turn_left^0,c
   778   00FA88  462F               	rlncf	??_Dc_motor_turn_left^0,f,c
   779   00FA8A  462F               	rlncf	??_Dc_motor_turn_left^0,f,c
   780   00FA8C  462F               	rlncf	??_Dc_motor_turn_left^0,f,c
   781   00FA8E  5032               	movf	Dc_motor_turn_left@dc_motor_pin_1^0,w,c
   782   00FA90  182F               	xorwf	??_Dc_motor_turn_left^0,w,c
   783   00FA92  0BC7               	andlw	-57
   784   00FA94  182F               	xorwf	??_Dc_motor_turn_left^0,w,c
   785   00FA96  6E32               	movwf	Dc_motor_turn_left@dc_motor_pin_1^0,c
   786   00FA98  9C32               	bcf	Dc_motor_turn_left@dc_motor_pin_1^0,6,c
   787   00FA9A  C02D  FFD9         	movff	Dc_motor_turn_left@_dc_motor,fsr2l
   788   00FA9E  C02E  FFDA         	movff	Dc_motor_turn_left@_dc_motor+1,fsr2h
   789   00FAA2  AEDF               	btfss	indf2,7,c
   790   00FAA4  D002               	bra	u805
   791   00FAA6  8E32               	bsf	Dc_motor_turn_left@dc_motor_pin_1^0,7,c
   792   00FAA8  D001               	bra	u807
   793   00FAAA                     u805:
   794   00FAAA  9E32               	bcf	Dc_motor_turn_left@dc_motor_pin_1^0,7,c
   795   00FAAC                     u807:
   796   00FAAC                     
   797                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 72:         pin_config_t dc_motor_pin_2 = {
   798   00FAAC  C041  F033         	movff	Dc_motor_turn_left@F2886,Dc_motor_turn_left@dc_motor_pin_2
   799   00FAB0  EE20 F001          	lfsr	2,1
   800   00FAB4  502D               	movf	Dc_motor_turn_left@_dc_motor^0,w,c
   801   00FAB6  26D9               	addwf	fsr2l,f,c
   802   00FAB8  502E               	movf	(Dc_motor_turn_left@_dc_motor+1)^0,w,c
   803   00FABA  22DA               	addwfc	fsr2h,f,c
   804   00FABC  50DF               	movf	223,w,c
   805   00FABE  0B0F               	andlw	15
   806   00FAC0  6E2F               	movwf	??_Dc_motor_turn_left^0,c
   807   00FAC2  5033               	movf	Dc_motor_turn_left@dc_motor_pin_2^0,w,c
   808   00FAC4  182F               	xorwf	??_Dc_motor_turn_left^0,w,c
   809   00FAC6  0BF8               	andlw	-8
   810   00FAC8  182F               	xorwf	??_Dc_motor_turn_left^0,w,c
   811   00FACA  6E33               	movwf	Dc_motor_turn_left@dc_motor_pin_2^0,c
   812   00FACC  EE20 F001          	lfsr	2,1
   813   00FAD0  502D               	movf	Dc_motor_turn_left@_dc_motor^0,w,c
   814   00FAD2  26D9               	addwf	fsr2l,f,c
   815   00FAD4  502E               	movf	(Dc_motor_turn_left@_dc_motor+1)^0,w,c
   816   00FAD6  22DA               	addwfc	fsr2h,f,c
   817   00FAD8  38DF               	swapf	223,w,c
   818   00FADA  0B07               	andlw	7
   819   00FADC  6E2F               	movwf	??_Dc_motor_turn_left^0,c
   820   00FADE  462F               	rlncf	??_Dc_motor_turn_left^0,f,c
   821   00FAE0  462F               	rlncf	??_Dc_motor_turn_left^0,f,c
   822   00FAE2  462F               	rlncf	??_Dc_motor_turn_left^0,f,c
   823   00FAE4  5033               	movf	Dc_motor_turn_left@dc_motor_pin_2^0,w,c
   824   00FAE6  182F               	xorwf	??_Dc_motor_turn_left^0,w,c
   825   00FAE8  0BC7               	andlw	-57
   826   00FAEA  182F               	xorwf	??_Dc_motor_turn_left^0,w,c
   827   00FAEC  6E33               	movwf	Dc_motor_turn_left@dc_motor_pin_2^0,c
   828   00FAEE  9C33               	bcf	Dc_motor_turn_left@dc_motor_pin_2^0,6,c
   829   00FAF0  EE20 F001          	lfsr	2,1
   830   00FAF4  502D               	movf	Dc_motor_turn_left@_dc_motor^0,w,c
   831   00FAF6  26D9               	addwf	fsr2l,f,c
   832   00FAF8  502E               	movf	(Dc_motor_turn_left@_dc_motor+1)^0,w,c
   833   00FAFA  22DA               	addwfc	fsr2h,f,c
   834   00FAFC  AEDF               	btfss	indf2,7,c
   835   00FAFE  D002               	bra	u815
   836   00FB00  8E33               	bsf	Dc_motor_turn_left@dc_motor_pin_2^0,7,c
   837   00FB02  D001               	bra	u817
   838   00FB04                     u815:
   839   00FB04  9E33               	bcf	Dc_motor_turn_left@dc_motor_pin_2^0,7,c
   840   00FB06                     u817:
   841   00FB06                     
   842                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 78:         gpio_pin_write_logic(&dc_motor_pin_1, G
      +                          PIO_HIGH);
   843   00FB06  0E32               	movlw	low Dc_motor_turn_left@dc_motor_pin_1
   844   00FB08  6E24               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   845   00FB0A  0E00               	movlw	high Dc_motor_turn_left@dc_motor_pin_1
   846   00FB0C  6E25               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   847   00FB0E  0E01               	movlw	1
   848   00FB10  6E26               	movwf	gpio_pin_write_logic@logic^0,c
   849   00FB12  ECAF  F07E         	call	_gpio_pin_write_logic	;wreg free
   850   00FB16                     
   851                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 79:         gpio_pin_write_logic(&dc_motor_pin_2, G
      +                          PIO_LOW);
   852   00FB16  0E33               	movlw	low Dc_motor_turn_left@dc_motor_pin_2
   853   00FB18  6E24               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   854   00FB1A  0E00               	movlw	high Dc_motor_turn_left@dc_motor_pin_2
   855   00FB1C  6E25               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   856   00FB1E  0E00               	movlw	0
   857   00FB20  6E26               	movwf	gpio_pin_write_logic@logic^0,c
   858   00FB22  ECAF  F07E         	call	_gpio_pin_write_logic	;wreg free
   859   00FB26                     l45:
   860   00FB26  0012               	return		;funcret
   861   00FB28                     __end_of_Dc_motor_turn_left:
   862                           	callstack 0
   863                           
   864 ;; *************** function _Dc_motor_stop *****************
   865 ;; Defined at:
   866 ;;		line 122 in file "ECU_Layer/ecu_dc_motor/ecu_motor.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  _dc_motor       2    9[COMRAM] PTR const struct .
   869 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  dc_motor_pin    1   13[COMRAM] struct .
   872 ;;  dc_motor_pin    1   12[COMRAM] struct .
   873 ;;  ret             1    0        unsigned char 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      unsigned char 
   876 ;; Registers used:
   877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;Total ram usage:        5 bytes
   888 ;; Hardware stack levels used: 1
   889 ;; Hardware stack levels required when called: 1
   890 ;; This function calls:
   891 ;;		_gpio_pin_write_logic
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text3
   898   00F880                     __ptext3:
   899                           	callstack 0
   900   00F880                     _Dc_motor_stop:
   901                           	callstack 29
   902   00F880                     
   903                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 124:     if(_dc_motor == ((void*)0)) ret = (STD_Ret
      +                          urnType)0x00;
   904   00F880  502D               	movf	Dc_motor_stop@_dc_motor^0,w,c
   905   00F882  102E               	iorwf	(Dc_motor_stop@_dc_motor+1)^0,w,c
   906   00F884  A4D8               	btfss	status,2,c
   907   00F886  EF47  F07C         	goto	u851
   908   00F88A  EF49  F07C         	goto	u850
   909   00F88E                     u851:
   910   00F88E  EF4B  F07C         	goto	l57
   911   00F892                     u850:
   912   00F892  EFAF  F07C         	goto	l63
   913   00F896                     l57:
   914                           
   915                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 126:         pin_config_t dc_motor_pin_1 = {
   916   00F896  C03E  F030         	movff	Dc_motor_stop@F2898,Dc_motor_stop@dc_motor_pin_1
   917   00F89A  C02D  FFD9         	movff	Dc_motor_stop@_dc_motor,fsr2l
   918   00F89E  C02E  FFDA         	movff	Dc_motor_stop@_dc_motor+1,fsr2h
   919   00F8A2  50DF               	movf	223,w,c
   920   00F8A4  0B0F               	andlw	15
   921   00F8A6  6E2F               	movwf	??_Dc_motor_stop^0,c
   922   00F8A8  5030               	movf	Dc_motor_stop@dc_motor_pin_1^0,w,c
   923   00F8AA  182F               	xorwf	??_Dc_motor_stop^0,w,c
   924   00F8AC  0BF8               	andlw	-8
   925   00F8AE  182F               	xorwf	??_Dc_motor_stop^0,w,c
   926   00F8B0  6E30               	movwf	Dc_motor_stop@dc_motor_pin_1^0,c
   927   00F8B2  C02D  FFD9         	movff	Dc_motor_stop@_dc_motor,fsr2l
   928   00F8B6  C02E  FFDA         	movff	Dc_motor_stop@_dc_motor+1,fsr2h
   929   00F8BA  38DF               	swapf	223,w,c
   930   00F8BC  0B07               	andlw	7
   931   00F8BE  6E2F               	movwf	??_Dc_motor_stop^0,c
   932   00F8C0  462F               	rlncf	??_Dc_motor_stop^0,f,c
   933   00F8C2  462F               	rlncf	??_Dc_motor_stop^0,f,c
   934   00F8C4  462F               	rlncf	??_Dc_motor_stop^0,f,c
   935   00F8C6  5030               	movf	Dc_motor_stop@dc_motor_pin_1^0,w,c
   936   00F8C8  182F               	xorwf	??_Dc_motor_stop^0,w,c
   937   00F8CA  0BC7               	andlw	-57
   938   00F8CC  182F               	xorwf	??_Dc_motor_stop^0,w,c
   939   00F8CE  6E30               	movwf	Dc_motor_stop@dc_motor_pin_1^0,c
   940   00F8D0  9C30               	bcf	Dc_motor_stop@dc_motor_pin_1^0,6,c
   941   00F8D2  C02D  FFD9         	movff	Dc_motor_stop@_dc_motor,fsr2l
   942   00F8D6  C02E  FFDA         	movff	Dc_motor_stop@_dc_motor+1,fsr2h
   943   00F8DA  AEDF               	btfss	indf2,7,c
   944   00F8DC  D002               	bra	u865
   945   00F8DE  8E30               	bsf	Dc_motor_stop@dc_motor_pin_1^0,7,c
   946   00F8E0  D001               	bra	u867
   947   00F8E2                     u865:
   948   00F8E2  9E30               	bcf	Dc_motor_stop@dc_motor_pin_1^0,7,c
   949   00F8E4                     u867:
   950   00F8E4                     
   951                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 132:         pin_config_t dc_motor_pin_2 = {
   952   00F8E4  C03D  F031         	movff	Dc_motor_stop@F2900,Dc_motor_stop@dc_motor_pin_2
   953   00F8E8  EE20 F001          	lfsr	2,1
   954   00F8EC  502D               	movf	Dc_motor_stop@_dc_motor^0,w,c
   955   00F8EE  26D9               	addwf	fsr2l,f,c
   956   00F8F0  502E               	movf	(Dc_motor_stop@_dc_motor+1)^0,w,c
   957   00F8F2  22DA               	addwfc	fsr2h,f,c
   958   00F8F4  50DF               	movf	223,w,c
   959   00F8F6  0B0F               	andlw	15
   960   00F8F8  6E2F               	movwf	??_Dc_motor_stop^0,c
   961   00F8FA  5031               	movf	Dc_motor_stop@dc_motor_pin_2^0,w,c
   962   00F8FC  182F               	xorwf	??_Dc_motor_stop^0,w,c
   963   00F8FE  0BF8               	andlw	-8
   964   00F900  182F               	xorwf	??_Dc_motor_stop^0,w,c
   965   00F902  6E31               	movwf	Dc_motor_stop@dc_motor_pin_2^0,c
   966   00F904  EE20 F001          	lfsr	2,1
   967   00F908  502D               	movf	Dc_motor_stop@_dc_motor^0,w,c
   968   00F90A  26D9               	addwf	fsr2l,f,c
   969   00F90C  502E               	movf	(Dc_motor_stop@_dc_motor+1)^0,w,c
   970   00F90E  22DA               	addwfc	fsr2h,f,c
   971   00F910  38DF               	swapf	223,w,c
   972   00F912  0B07               	andlw	7
   973   00F914  6E2F               	movwf	??_Dc_motor_stop^0,c
   974   00F916  462F               	rlncf	??_Dc_motor_stop^0,f,c
   975   00F918  462F               	rlncf	??_Dc_motor_stop^0,f,c
   976   00F91A  462F               	rlncf	??_Dc_motor_stop^0,f,c
   977   00F91C  5031               	movf	Dc_motor_stop@dc_motor_pin_2^0,w,c
   978   00F91E  182F               	xorwf	??_Dc_motor_stop^0,w,c
   979   00F920  0BC7               	andlw	-57
   980   00F922  182F               	xorwf	??_Dc_motor_stop^0,w,c
   981   00F924  6E31               	movwf	Dc_motor_stop@dc_motor_pin_2^0,c
   982   00F926  9C31               	bcf	Dc_motor_stop@dc_motor_pin_2^0,6,c
   983   00F928  EE20 F001          	lfsr	2,1
   984   00F92C  502D               	movf	Dc_motor_stop@_dc_motor^0,w,c
   985   00F92E  26D9               	addwf	fsr2l,f,c
   986   00F930  502E               	movf	(Dc_motor_stop@_dc_motor+1)^0,w,c
   987   00F932  22DA               	addwfc	fsr2h,f,c
   988   00F934  AEDF               	btfss	indf2,7,c
   989   00F936  D002               	bra	u875
   990   00F938  8E31               	bsf	Dc_motor_stop@dc_motor_pin_2^0,7,c
   991   00F93A  D001               	bra	u877
   992   00F93C                     u875:
   993   00F93C  9E31               	bcf	Dc_motor_stop@dc_motor_pin_2^0,7,c
   994   00F93E                     u877:
   995   00F93E                     
   996                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 138:         gpio_pin_write_logic(&dc_motor_pin_1, 
      +                          GPIO_LOW);
   997   00F93E  0E30               	movlw	low Dc_motor_stop@dc_motor_pin_1
   998   00F940  6E24               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   999   00F942  0E00               	movlw	high Dc_motor_stop@dc_motor_pin_1
  1000   00F944  6E25               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
  1001   00F946  0E00               	movlw	0
  1002   00F948  6E26               	movwf	gpio_pin_write_logic@logic^0,c
  1003   00F94A  ECAF  F07E         	call	_gpio_pin_write_logic	;wreg free
  1004   00F94E                     
  1005                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 139:         gpio_pin_write_logic(&dc_motor_pin_2, 
      +                          GPIO_LOW);
  1006   00F94E  0E31               	movlw	low Dc_motor_stop@dc_motor_pin_2
  1007   00F950  6E24               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  1008   00F952  0E00               	movlw	high Dc_motor_stop@dc_motor_pin_2
  1009   00F954  6E25               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
  1010   00F956  0E00               	movlw	0
  1011   00F958  6E26               	movwf	gpio_pin_write_logic@logic^0,c
  1012   00F95A  ECAF  F07E         	call	_gpio_pin_write_logic	;wreg free
  1013   00F95E                     l63:
  1014   00F95E  0012               	return		;funcret
  1015   00F960                     __end_of_Dc_motor_stop:
  1016                           	callstack 0
  1017                           
  1018 ;; *************** function _Application_initialize *****************
  1019 ;; Defined at:
  1020 ;;		line 55 in file "Application.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;Total ram usage:        0 bytes
  1039 ;; Hardware stack levels used: 1
  1040 ;; Hardware stack levels required when called: 2
  1041 ;; This function calls:
  1042 ;;		_Dc_motor_initialize
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text4
  1049   00F808                     __ptext4:
  1050                           	callstack 0
  1051   00F808                     _Application_initialize:
  1052                           	callstack 28
  1053   00F808                     
  1054                           ;Application.c: 56:     ret = Dc_motor_initialize(&dc_motor_1);
  1055   00F808  0E22               	movlw	low _dc_motor_1
  1056   00F80A  6E2D               	movwf	Dc_motor_initialize@_dc_motor^0,c
  1057   00F80C  0E00               	movlw	high _dc_motor_1
  1058   00F80E  6E2E               	movwf	(Dc_motor_initialize@_dc_motor+1)^0,c
  1059   00F810  EC94  F07D         	call	_Dc_motor_initialize	;wreg free
  1060   00F814  6E1F               	movwf	_ret^0,c
  1061                           
  1062                           ;Application.c: 57:     ret = Dc_motor_initialize(&dc_motor_2);
  1063   00F816  0E20               	movlw	low _dc_motor_2
  1064   00F818  6E2D               	movwf	Dc_motor_initialize@_dc_motor^0,c
  1065   00F81A  0E00               	movlw	high _dc_motor_2
  1066   00F81C  6E2E               	movwf	(Dc_motor_initialize@_dc_motor+1)^0,c
  1067   00F81E  EC94  F07D         	call	_Dc_motor_initialize	;wreg free
  1068   00F822  6E1F               	movwf	_ret^0,c
  1069   00F824  0012               	return		;funcret
  1070   00F826                     __end_of_Application_initialize:
  1071                           	callstack 0
  1072                           
  1073 ;; *************** function _Dc_motor_initialize *****************
  1074 ;; Defined at:
  1075 ;;		line 28 in file "ECU_Layer/ecu_dc_motor/ecu_motor.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  _dc_motor       2    9[COMRAM] PTR const struct .
  1078 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  dc_motor_pin    1   14[COMRAM] struct .
  1081 ;;  dc_motor_pin    1   13[COMRAM] struct .
  1082 ;;  ret             1   12[COMRAM] unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      unsigned char 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;Total ram usage:        6 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 1
  1099 ;; This function calls:
  1100 ;;		_gpio_pin_direction_init
  1101 ;;		_gpio_pin_write_logic
  1102 ;; This function is called by:
  1103 ;;		_Application_initialize
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text5
  1108   00FB28                     __ptext5:
  1109                           	callstack 0
  1110   00FB28                     _Dc_motor_initialize:
  1111                           	callstack 28
  1112   00FB28                     
  1113                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 29:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1114   00FB28  0E01               	movlw	1
  1115   00FB2A  6E30               	movwf	Dc_motor_initialize@ret^0,c
  1116   00FB2C                     
  1117                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 30:     if(_dc_motor == ((void*)0)) ret = (STD_Retu
      +                          rnType)0x00;
  1118   00FB2C  502D               	movf	Dc_motor_initialize@_dc_motor^0,w,c
  1119   00FB2E  102E               	iorwf	(Dc_motor_initialize@_dc_motor+1)^0,w,c
  1120   00FB30  A4D8               	btfss	status,2,c
  1121   00FB32  EF9D  F07D         	goto	u761
  1122   00FB36  EF9F  F07D         	goto	u760
  1123   00FB3A                     u761:
  1124   00FB3A  EFA3  F07D         	goto	l30
  1125   00FB3E                     u760:
  1126   00FB3E  0E00               	movlw	0
  1127   00FB40  6E30               	movwf	Dc_motor_initialize@ret^0,c
  1128   00FB42  EF17  F07E         	goto	l1474
  1129   00FB46                     l30:
  1130                           
  1131                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 32:         pin_config_t dc_motor_pin_1 = {
  1132   00FB46  C044  F031         	movff	Dc_motor_initialize@F2875,Dc_motor_initialize@dc_motor_pin_1
  1133   00FB4A  C02D  FFD9         	movff	Dc_motor_initialize@_dc_motor,fsr2l
  1134   00FB4E  C02E  FFDA         	movff	Dc_motor_initialize@_dc_motor+1,fsr2h
  1135   00FB52  50DF               	movf	223,w,c
  1136   00FB54  0B0F               	andlw	15
  1137   00FB56  6E2F               	movwf	??_Dc_motor_initialize^0,c
  1138   00FB58  5031               	movf	Dc_motor_initialize@dc_motor_pin_1^0,w,c
  1139   00FB5A  182F               	xorwf	??_Dc_motor_initialize^0,w,c
  1140   00FB5C  0BF8               	andlw	-8
  1141   00FB5E  182F               	xorwf	??_Dc_motor_initialize^0,w,c
  1142   00FB60  6E31               	movwf	Dc_motor_initialize@dc_motor_pin_1^0,c
  1143   00FB62  C02D  FFD9         	movff	Dc_motor_initialize@_dc_motor,fsr2l
  1144   00FB66  C02E  FFDA         	movff	Dc_motor_initialize@_dc_motor+1,fsr2h
  1145   00FB6A  38DF               	swapf	223,w,c
  1146   00FB6C  0B07               	andlw	7
  1147   00FB6E  6E2F               	movwf	??_Dc_motor_initialize^0,c
  1148   00FB70  462F               	rlncf	??_Dc_motor_initialize^0,f,c
  1149   00FB72  462F               	rlncf	??_Dc_motor_initialize^0,f,c
  1150   00FB74  462F               	rlncf	??_Dc_motor_initialize^0,f,c
  1151   00FB76  5031               	movf	Dc_motor_initialize@dc_motor_pin_1^0,w,c
  1152   00FB78  182F               	xorwf	??_Dc_motor_initialize^0,w,c
  1153   00FB7A  0BC7               	andlw	-57
  1154   00FB7C  182F               	xorwf	??_Dc_motor_initialize^0,w,c
  1155   00FB7E  6E31               	movwf	Dc_motor_initialize@dc_motor_pin_1^0,c
  1156   00FB80  9C31               	bcf	Dc_motor_initialize@dc_motor_pin_1^0,6,c
  1157   00FB82  C02D  FFD9         	movff	Dc_motor_initialize@_dc_motor,fsr2l
  1158   00FB86  C02E  FFDA         	movff	Dc_motor_initialize@_dc_motor+1,fsr2h
  1159   00FB8A  AEDF               	btfss	indf2,7,c
  1160   00FB8C  D002               	bra	u775
  1161   00FB8E  8E31               	bsf	Dc_motor_initialize@dc_motor_pin_1^0,7,c
  1162   00FB90  D001               	bra	u777
  1163   00FB92                     u775:
  1164   00FB92  9E31               	bcf	Dc_motor_initialize@dc_motor_pin_1^0,7,c
  1165   00FB94                     u777:
  1166   00FB94                     
  1167                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 38:         pin_config_t dc_motor_pin_2 = {
  1168   00FB94  C043  F032         	movff	Dc_motor_initialize@F2877,Dc_motor_initialize@dc_motor_pin_2
  1169   00FB98  EE20 F001          	lfsr	2,1
  1170   00FB9C  502D               	movf	Dc_motor_initialize@_dc_motor^0,w,c
  1171   00FB9E  26D9               	addwf	fsr2l,f,c
  1172   00FBA0  502E               	movf	(Dc_motor_initialize@_dc_motor+1)^0,w,c
  1173   00FBA2  22DA               	addwfc	fsr2h,f,c
  1174   00FBA4  50DF               	movf	223,w,c
  1175   00FBA6  0B0F               	andlw	15
  1176   00FBA8  6E2F               	movwf	??_Dc_motor_initialize^0,c
  1177   00FBAA  5032               	movf	Dc_motor_initialize@dc_motor_pin_2^0,w,c
  1178   00FBAC  182F               	xorwf	??_Dc_motor_initialize^0,w,c
  1179   00FBAE  0BF8               	andlw	-8
  1180   00FBB0  182F               	xorwf	??_Dc_motor_initialize^0,w,c
  1181   00FBB2  6E32               	movwf	Dc_motor_initialize@dc_motor_pin_2^0,c
  1182   00FBB4  EE20 F001          	lfsr	2,1
  1183   00FBB8  502D               	movf	Dc_motor_initialize@_dc_motor^0,w,c
  1184   00FBBA  26D9               	addwf	fsr2l,f,c
  1185   00FBBC  502E               	movf	(Dc_motor_initialize@_dc_motor+1)^0,w,c
  1186   00FBBE  22DA               	addwfc	fsr2h,f,c
  1187   00FBC0  38DF               	swapf	223,w,c
  1188   00FBC2  0B07               	andlw	7
  1189   00FBC4  6E2F               	movwf	??_Dc_motor_initialize^0,c
  1190   00FBC6  462F               	rlncf	??_Dc_motor_initialize^0,f,c
  1191   00FBC8  462F               	rlncf	??_Dc_motor_initialize^0,f,c
  1192   00FBCA  462F               	rlncf	??_Dc_motor_initialize^0,f,c
  1193   00FBCC  5032               	movf	Dc_motor_initialize@dc_motor_pin_2^0,w,c
  1194   00FBCE  182F               	xorwf	??_Dc_motor_initialize^0,w,c
  1195   00FBD0  0BC7               	andlw	-57
  1196   00FBD2  182F               	xorwf	??_Dc_motor_initialize^0,w,c
  1197   00FBD4  6E32               	movwf	Dc_motor_initialize@dc_motor_pin_2^0,c
  1198   00FBD6  9C32               	bcf	Dc_motor_initialize@dc_motor_pin_2^0,6,c
  1199   00FBD8  EE20 F001          	lfsr	2,1
  1200   00FBDC  502D               	movf	Dc_motor_initialize@_dc_motor^0,w,c
  1201   00FBDE  26D9               	addwf	fsr2l,f,c
  1202   00FBE0  502E               	movf	(Dc_motor_initialize@_dc_motor+1)^0,w,c
  1203   00FBE2  22DA               	addwfc	fsr2h,f,c
  1204   00FBE4  AEDF               	btfss	indf2,7,c
  1205   00FBE6  D002               	bra	u785
  1206   00FBE8  8E32               	bsf	Dc_motor_initialize@dc_motor_pin_2^0,7,c
  1207   00FBEA  D001               	bra	u787
  1208   00FBEC                     u785:
  1209   00FBEC  9E32               	bcf	Dc_motor_initialize@dc_motor_pin_2^0,7,c
  1210   00FBEE                     u787:
  1211   00FBEE                     
  1212                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 44:         gpio_pin_direction_init(&dc_motor_pin_1
      +                          );
  1213   00FBEE  0E31               	movlw	low Dc_motor_initialize@dc_motor_pin_1
  1214   00FBF0  6E24               	movwf	gpio_pin_direction_init@_pin_config_t^0,c
  1215   00FBF2  0E00               	movlw	high Dc_motor_initialize@dc_motor_pin_1
  1216   00FBF4  6E25               	movwf	(gpio_pin_direction_init@_pin_config_t+1)^0,c
  1217   00FBF6  EC4F  F07F         	call	_gpio_pin_direction_init	;wreg free
  1218   00FBFA                     
  1219                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 45:         gpio_pin_direction_init(&dc_motor_pin_2
      +                          );
  1220   00FBFA  0E32               	movlw	low Dc_motor_initialize@dc_motor_pin_2
  1221   00FBFC  6E24               	movwf	gpio_pin_direction_init@_pin_config_t^0,c
  1222   00FBFE  0E00               	movlw	high Dc_motor_initialize@dc_motor_pin_2
  1223   00FC00  6E25               	movwf	(gpio_pin_direction_init@_pin_config_t+1)^0,c
  1224   00FC02  EC4F  F07F         	call	_gpio_pin_direction_init	;wreg free
  1225   00FC06                     
  1226                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 46:         gpio_pin_write_logic(&dc_motor_pin_1, d
      +                          c_motor_pin_1.logic);
  1227   00FC06  0E31               	movlw	low Dc_motor_initialize@dc_motor_pin_1
  1228   00FC08  6E24               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  1229   00FC0A  0E00               	movlw	high Dc_motor_initialize@dc_motor_pin_1
  1230   00FC0C  6E25               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
  1231   00FC0E  0E00               	movlw	0
  1232   00FC10  BE31               	btfsc	Dc_motor_initialize@dc_motor_pin_1^0,7,c
  1233   00FC12  0E01               	movlw	1
  1234   00FC14  6E26               	movwf	gpio_pin_write_logic@logic^0,c
  1235   00FC16  ECAF  F07E         	call	_gpio_pin_write_logic	;wreg free
  1236   00FC1A                     
  1237                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 47:         gpio_pin_write_logic(&dc_motor_pin_2, d
      +                          c_motor_pin_2.logic);
  1238   00FC1A  0E32               	movlw	low Dc_motor_initialize@dc_motor_pin_2
  1239   00FC1C  6E24               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  1240   00FC1E  0E00               	movlw	high Dc_motor_initialize@dc_motor_pin_2
  1241   00FC20  6E25               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
  1242   00FC22  0E00               	movlw	0
  1243   00FC24  BE32               	btfsc	Dc_motor_initialize@dc_motor_pin_2^0,7,c
  1244   00FC26  0E01               	movlw	1
  1245   00FC28  6E26               	movwf	gpio_pin_write_logic@logic^0,c
  1246   00FC2A  ECAF  F07E         	call	_gpio_pin_write_logic	;wreg free
  1247   00FC2E                     l1474:
  1248                           
  1249                           ;ECU_Layer/ecu_dc_motor/ecu_motor.c: 49:     return ret;
  1250   00FC2E  5030               	movf	Dc_motor_initialize@ret^0,w,c
  1251   00FC30  0012               	return		;funcret
  1252   00FC32                     __end_of_Dc_motor_initialize:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _gpio_pin_write_logic *****************
  1256 ;; Defined at:
  1257 ;;		line 70 in file "MCAL_Layer/hal_gpio.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
  1260 ;;		 -> relay_turn_off@relayy(1), relay_turn_on@relayy(1), relay_initialize@relayy(1), led_turn_off@pin_obj(1), 
  1261 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), Dc_motor_stop@dc_motor_pin_2(1), Dc_motor_stop@dc_motor_pin_1
      +(1), 
  1262 ;;		 -> Dc_motor_turn_right@dc_motor_pin_2(1), Dc_motor_turn_right@dc_motor_pin_1(1), Dc_motor_turn_left@dc_motor_pin_2(
      +1), Dc_motor_turn_left@dc_motor_pin_1(1), 
  1263 ;;		 -> Dc_motor_initialize@dc_motor_pin_2(1), Dc_motor_initialize@dc_motor_pin_1(1), 
  1264 ;;  logic           1    2[COMRAM] enum E2798
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  ret             1    0        unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      unsigned char 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1276 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;Total ram usage:        9 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_Dc_motor_initialize
  1286 ;;		_Dc_motor_turn_left
  1287 ;;		_Dc_motor_turn_right
  1288 ;;		_Dc_motor_stop
  1289 ;;		_led_initialize
  1290 ;;		_led_turn_on
  1291 ;;		_led_turn_off
  1292 ;;		_relay_initialize
  1293 ;;		_relay_turn_on
  1294 ;;		_relay_turn_off
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text6
  1299   00FD5E                     __ptext6:
  1300                           	callstack 0
  1301   00FD5E                     _gpio_pin_write_logic:
  1302                           	callstack 29
  1303   00FD5E                     
  1304                           ;MCAL_Layer/hal_gpio.c: 72:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port >
      +                           5 - 1) || (_pin_config_t->pin > 8 - 1)) ret = (STD_ReturnType)0x00;
  1305   00FD5E  5024               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1306   00FD60  1025               	iorwf	(gpio_pin_write_logic@_pin_config_t+1)^0,w,c
  1307   00FD62  B4D8               	btfsc	status,2,c
  1308   00FD64  EFB6  F07E         	goto	u711
  1309   00FD68  EFB8  F07E         	goto	u710
  1310   00FD6C                     u711:
  1311   00FD6C  EFD8  F07E         	goto	l1430
  1312   00FD70                     u710:
  1313   00FD70  C024  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1314   00FD74  C025  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1315   00FD78  50DF               	movf	223,w,c
  1316   00FD7A  0B07               	andlw	7
  1317   00FD7C  6E27               	movwf	??_gpio_pin_write_logic^0,c
  1318   00FD7E  0E05               	movlw	5
  1319   00FD80  6027               	cpfslt	??_gpio_pin_write_logic^0,c
  1320   00FD82  EFC5  F07E         	goto	u721
  1321   00FD86  EFC7  F07E         	goto	u720
  1322   00FD8A                     u721:
  1323   00FD8A  EFD8  F07E         	goto	l1430
  1324   00FD8E                     u720:
  1325   00FD8E  C024  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1326   00FD92  C025  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1327   00FD96  30DF               	rrcf	223,w,c
  1328   00FD98  32E8               	rrcf	wreg,f,c
  1329   00FD9A  32E8               	rrcf	wreg,f,c
  1330   00FD9C  0B07               	andlw	7
  1331   00FD9E  6E27               	movwf	??_gpio_pin_write_logic^0,c
  1332   00FDA0  0E07               	movlw	7
  1333   00FDA2  6427               	cpfsgt	??_gpio_pin_write_logic^0,c
  1334   00FDA4  EFD6  F07E         	goto	u731
  1335   00FDA8  EFD8  F07E         	goto	u730
  1336   00FDAC                     u731:
  1337   00FDAC  EF39  F07F         	goto	l1438
  1338   00FDB0                     u730:
  1339   00FDB0                     l1430:
  1340   00FDB0  EF4E  F07F         	goto	l189
  1341   00FDB4                     l1432:
  1342                           
  1343                           ;MCAL_Layer/hal_gpio.c: 76:                 (*lat_register[_pin_config_t->port] &= ~(1 <
      +                          < _pin_config_t->pin));
  1344   00FDB4  C024  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1345   00FDB8  C025  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1346   00FDBC  30DF               	rrcf	223,w,c
  1347   00FDBE  32E8               	rrcf	wreg,f,c
  1348   00FDC0  32E8               	rrcf	wreg,f,c
  1349   00FDC2  0B07               	andlw	7
  1350   00FDC4  6E27               	movwf	??_gpio_pin_write_logic^0,c
  1351   00FDC6  0E01               	movlw	1
  1352   00FDC8  6E28               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1353   00FDCA  2A27               	incf	??_gpio_pin_write_logic^0,f,c
  1354   00FDCC  EFEA  F07E         	goto	u744
  1355   00FDD0                     u745:
  1356   00FDD0  90D8               	bcf	status,0,c
  1357   00FDD2  3628               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1358   00FDD4                     u744:
  1359   00FDD4  2E27               	decfsz	??_gpio_pin_write_logic^0,f,c
  1360   00FDD6  EFE8  F07E         	goto	u745
  1361   00FDDA  5028               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1362   00FDDC  0AFF               	xorlw	255
  1363   00FDDE  6E29               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1364   00FDE0  C024  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1365   00FDE4  C025  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1366   00FDE8  50DF               	movf	223,w,c
  1367   00FDEA  0B07               	andlw	7
  1368   00FDEC  6E2A               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1369   00FDEE  502A               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1370   00FDF0  0D02               	mullw	2
  1371   00FDF2  0E0B               	movlw	low _lat_register
  1372   00FDF4  24F3               	addwf	243,w,c
  1373   00FDF6  6ED9               	movwf	fsr2l,c
  1374   00FDF8  0E00               	movlw	high _lat_register
  1375   00FDFA  20F4               	addwfc	prodh,w,c
  1376   00FDFC  6EDA               	movwf	fsr2h,c
  1377   00FDFE  CFDE F02B          	movff	postinc2,??_gpio_pin_write_logic+4
  1378   00FE02  CFDD F02C          	movff	postdec2,??_gpio_pin_write_logic+5
  1379   00FE06  C02B  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1380   00FE0A  C02C  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1381   00FE0E  5029               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1382   00FE10  16DF               	andwf	indf2,f,c
  1383                           
  1384                           ;MCAL_Layer/hal_gpio.c: 77:                 break;
  1385   00FE12  EF4E  F07F         	goto	l189
  1386   00FE16                     l1434:
  1387                           
  1388                           ;MCAL_Layer/hal_gpio.c: 79:                 (*lat_register[_pin_config_t->port] |= (1 <<
      +                           _pin_config_t->pin));
  1389   00FE16  C024  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1390   00FE1A  C025  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1391   00FE1E  30DF               	rrcf	223,w,c
  1392   00FE20  32E8               	rrcf	wreg,f,c
  1393   00FE22  32E8               	rrcf	wreg,f,c
  1394   00FE24  0B07               	andlw	7
  1395   00FE26  6E27               	movwf	??_gpio_pin_write_logic^0,c
  1396   00FE28  0E01               	movlw	1
  1397   00FE2A  6E28               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1398   00FE2C  2A27               	incf	??_gpio_pin_write_logic^0,f,c
  1399   00FE2E  EF1B  F07F         	goto	u754
  1400   00FE32                     u755:
  1401   00FE32  90D8               	bcf	status,0,c
  1402   00FE34  3628               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1403   00FE36                     u754:
  1404   00FE36  2E27               	decfsz	??_gpio_pin_write_logic^0,f,c
  1405   00FE38  EF19  F07F         	goto	u755
  1406   00FE3C  C024  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1407   00FE40  C025  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1408   00FE44  50DF               	movf	223,w,c
  1409   00FE46  0B07               	andlw	7
  1410   00FE48  6E29               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1411   00FE4A  5029               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1412   00FE4C  0D02               	mullw	2
  1413   00FE4E  0E0B               	movlw	low _lat_register
  1414   00FE50  24F3               	addwf	243,w,c
  1415   00FE52  6ED9               	movwf	fsr2l,c
  1416   00FE54  0E00               	movlw	high _lat_register
  1417   00FE56  20F4               	addwfc	prodh,w,c
  1418   00FE58  6EDA               	movwf	fsr2h,c
  1419   00FE5A  CFDE F02A          	movff	postinc2,??_gpio_pin_write_logic+3
  1420   00FE5E  CFDD F02B          	movff	postdec2,??_gpio_pin_write_logic+4
  1421   00FE62  C02A  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1422   00FE66  C02B  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1423   00FE6A  5028               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1424   00FE6C  12DF               	iorwf	indf2,f,c
  1425                           
  1426                           ;MCAL_Layer/hal_gpio.c: 80:                 break;
  1427   00FE6E  EF4E  F07F         	goto	l189
  1428   00FE72                     l1438:
  1429   00FE72  5026               	movf	gpio_pin_write_logic@logic^0,w,c
  1430   00FE74  6E27               	movwf	??_gpio_pin_write_logic^0,c
  1431   00FE76  6A28               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1432                           
  1433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1434                           ; Switch size 1, requested type "simple"
  1435                           ; Number of cases is 1, Range of values is 0 to 0
  1436                           ; switch strategies available:
  1437                           ; Name         Instructions Cycles
  1438                           ; simple_byte            4     3 (average)
  1439                           ;	Chosen strategy is simple_byte
  1440   00FE78  5028               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1441   00FE7A  0A00               	xorlw	0	; case 0
  1442   00FE7C  B4D8               	btfsc	status,2,c
  1443   00FE7E  EF43  F07F         	goto	l1704
  1444   00FE82  EFD8  F07E         	goto	l1430
  1445   00FE86                     l1704:
  1446                           
  1447                           ; Switch size 1, requested type "simple"
  1448                           ; Number of cases is 2, Range of values is 0 to 1
  1449                           ; switch strategies available:
  1450                           ; Name         Instructions Cycles
  1451                           ; simple_byte            7     4 (average)
  1452                           ;	Chosen strategy is simple_byte
  1453   00FE86  5027               	movf	??_gpio_pin_write_logic^0,w,c
  1454   00FE88  0A00               	xorlw	0	; case 0
  1455   00FE8A  B4D8               	btfsc	status,2,c
  1456   00FE8C  EFDA  F07E         	goto	l1432
  1457   00FE90  0A01               	xorlw	1	; case 1
  1458   00FE92  B4D8               	btfsc	status,2,c
  1459   00FE94  EF0B  F07F         	goto	l1434
  1460   00FE98  EFD8  F07E         	goto	l1430
  1461   00FE9C                     l189:
  1462   00FE9C  0012               	return		;funcret
  1463   00FE9E                     __end_of_gpio_pin_write_logic:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _gpio_pin_direction_init *****************
  1467 ;; Defined at:
  1468 ;;		line 24 in file "MCAL_Layer/hal_gpio.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
  1471 ;;		 -> relay_initialize@relayy(1), led_initialize@pin_obj(1), Dc_motor_initialize@dc_motor_pin_2(1), Dc_motor_initializ
      +e@dc_motor_pin_1(1), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  ret             1    8[COMRAM] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      unsigned char 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;Total ram usage:        9 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_Dc_motor_initialize
  1493 ;;		_button_initialize
  1494 ;;		_led_initialize
  1495 ;;		_relay_initialize
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text7
  1500   00FE9E                     __ptext7:
  1501                           	callstack 0
  1502   00FE9E                     _gpio_pin_direction_init:
  1503                           	callstack 28
  1504   00FE9E                     
  1505                           ;MCAL_Layer/hal_gpio.c: 25:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1506   00FE9E  0E01               	movlw	1
  1507   00FEA0  6E2C               	movwf	gpio_pin_direction_init@ret^0,c
  1508   00FEA2                     
  1509                           ;MCAL_Layer/hal_gpio.c: 26:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port >
      +                           (5 - 1)) || (_pin_config_t->pin > (8 - 1))) ret = (STD_ReturnType)0x00;
  1510   00FEA2  5024               	movf	gpio_pin_direction_init@_pin_config_t^0,w,c
  1511   00FEA4  1025               	iorwf	(gpio_pin_direction_init@_pin_config_t+1)^0,w,c
  1512   00FEA6  B4D8               	btfsc	status,2,c
  1513   00FEA8  EF58  F07F         	goto	u641
  1514   00FEAC  EF5A  F07F         	goto	u640
  1515   00FEB0                     u641:
  1516   00FEB0  EF7A  F07F         	goto	l1404
  1517   00FEB4                     u640:
  1518   00FEB4  C024  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1519   00FEB8  C025  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1520   00FEBC  50DF               	movf	223,w,c
  1521   00FEBE  0B07               	andlw	7
  1522   00FEC0  6E26               	movwf	??_gpio_pin_direction_init^0,c
  1523   00FEC2  0E05               	movlw	5
  1524   00FEC4  6026               	cpfslt	??_gpio_pin_direction_init^0,c
  1525   00FEC6  EF67  F07F         	goto	u651
  1526   00FECA  EF69  F07F         	goto	u650
  1527   00FECE                     u651:
  1528   00FECE  EF7A  F07F         	goto	l1404
  1529   00FED2                     u650:
  1530   00FED2  C024  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1531   00FED6  C025  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1532   00FEDA  30DF               	rrcf	223,w,c
  1533   00FEDC  32E8               	rrcf	wreg,f,c
  1534   00FEDE  32E8               	rrcf	wreg,f,c
  1535   00FEE0  0B07               	andlw	7
  1536   00FEE2  6E26               	movwf	??_gpio_pin_direction_init^0,c
  1537   00FEE4  0E07               	movlw	7
  1538   00FEE6  6426               	cpfsgt	??_gpio_pin_direction_init^0,c
  1539   00FEE8  EF78  F07F         	goto	u661
  1540   00FEEC  EF7A  F07F         	goto	u660
  1541   00FEF0                     u661:
  1542   00FEF0  EFDD  F07F         	goto	l1412
  1543   00FEF4                     u660:
  1544   00FEF4                     l1404:
  1545   00FEF4  0E00               	movlw	0
  1546   00FEF6  6E2C               	movwf	gpio_pin_direction_init@ret^0,c
  1547   00FEF8  EFFE  F07F         	goto	l1414
  1548   00FEFC                     l1406:
  1549                           
  1550                           ;MCAL_Layer/hal_gpio.c: 30:                 (*tris_register[_pin_config_t->port] &= ~(1 
      +                          << _pin_config_t->pin));
  1551   00FEFC  C024  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1552   00FF00  C025  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1553   00FF04  30DF               	rrcf	223,w,c
  1554   00FF06  32E8               	rrcf	wreg,f,c
  1555   00FF08  32E8               	rrcf	wreg,f,c
  1556   00FF0A  0B07               	andlw	7
  1557   00FF0C  6E26               	movwf	??_gpio_pin_direction_init^0,c
  1558   00FF0E  0E01               	movlw	1
  1559   00FF10  6E27               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1560   00FF12  2A26               	incf	??_gpio_pin_direction_init^0,f,c
  1561   00FF14  EF8E  F07F         	goto	u674
  1562   00FF18                     u675:
  1563   00FF18  90D8               	bcf	status,0,c
  1564   00FF1A  3627               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1565   00FF1C                     u674:
  1566   00FF1C  2E26               	decfsz	??_gpio_pin_direction_init^0,f,c
  1567   00FF1E  EF8C  F07F         	goto	u675
  1568   00FF22  5027               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1569   00FF24  0AFF               	xorlw	255
  1570   00FF26  6E28               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1571   00FF28  C024  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1572   00FF2C  C025  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1573   00FF30  50DF               	movf	223,w,c
  1574   00FF32  0B07               	andlw	7
  1575   00FF34  6E29               	movwf	(??_gpio_pin_direction_init+3)^0,c
  1576   00FF36  5029               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  1577   00FF38  0D02               	mullw	2
  1578   00FF3A  0E15               	movlw	low _tris_register
  1579   00FF3C  24F3               	addwf	243,w,c
  1580   00FF3E  6ED9               	movwf	fsr2l,c
  1581   00FF40  0E00               	movlw	high _tris_register
  1582   00FF42  20F4               	addwfc	prodh,w,c
  1583   00FF44  6EDA               	movwf	fsr2h,c
  1584   00FF46  CFDE F02A          	movff	postinc2,??_gpio_pin_direction_init+4
  1585   00FF4A  CFDD F02B          	movff	postdec2,??_gpio_pin_direction_init+5
  1586   00FF4E  C02A  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  1587   00FF52  C02B  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  1588   00FF56  5028               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1589   00FF58  16DF               	andwf	indf2,f,c
  1590                           
  1591                           ;MCAL_Layer/hal_gpio.c: 31:                 break;
  1592   00FF5A  EFFE  F07F         	goto	l1414
  1593   00FF5E                     l1408:
  1594                           
  1595                           ;MCAL_Layer/hal_gpio.c: 33:                 (*tris_register[_pin_config_t->port] |= (1 <
      +                          < _pin_config_t->pin));
  1596   00FF5E  C024  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1597   00FF62  C025  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1598   00FF66  30DF               	rrcf	223,w,c
  1599   00FF68  32E8               	rrcf	wreg,f,c
  1600   00FF6A  32E8               	rrcf	wreg,f,c
  1601   00FF6C  0B07               	andlw	7
  1602   00FF6E  6E26               	movwf	??_gpio_pin_direction_init^0,c
  1603   00FF70  0E01               	movlw	1
  1604   00FF72  6E27               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1605   00FF74  2A26               	incf	??_gpio_pin_direction_init^0,f,c
  1606   00FF76  EFBF  F07F         	goto	u684
  1607   00FF7A                     u685:
  1608   00FF7A  90D8               	bcf	status,0,c
  1609   00FF7C  3627               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1610   00FF7E                     u684:
  1611   00FF7E  2E26               	decfsz	??_gpio_pin_direction_init^0,f,c
  1612   00FF80  EFBD  F07F         	goto	u685
  1613   00FF84  C024  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1614   00FF88  C025  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1615   00FF8C  50DF               	movf	223,w,c
  1616   00FF8E  0B07               	andlw	7
  1617   00FF90  6E28               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1618   00FF92  5028               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1619   00FF94  0D02               	mullw	2
  1620   00FF96  0E15               	movlw	low _tris_register
  1621   00FF98  24F3               	addwf	243,w,c
  1622   00FF9A  6ED9               	movwf	fsr2l,c
  1623   00FF9C  0E00               	movlw	high _tris_register
  1624   00FF9E  20F4               	addwfc	prodh,w,c
  1625   00FFA0  6EDA               	movwf	fsr2h,c
  1626   00FFA2  CFDE F029          	movff	postinc2,??_gpio_pin_direction_init+3
  1627   00FFA6  CFDD F02A          	movff	postdec2,??_gpio_pin_direction_init+4
  1628   00FFAA  C029  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1629   00FFAE  C02A  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1630   00FFB2  5027               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1631   00FFB4  12DF               	iorwf	indf2,f,c
  1632                           
  1633                           ;MCAL_Layer/hal_gpio.c: 34:                 break;
  1634   00FFB6  EFFE  F07F         	goto	l1414
  1635   00FFBA                     l1412:
  1636   00FFBA  C024  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1637   00FFBE  C025  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1638   00FFC2  BCDF               	btfsc	indf2,6,c
  1639   00FFC4  EFE6  F07F         	goto	u691
  1640   00FFC8  EFE9  F07F         	goto	u690
  1641   00FFCC                     u691:
  1642   00FFCC  0E01               	movlw	1
  1643   00FFCE  EFEA  F07F         	goto	u700
  1644   00FFD2                     u690:
  1645   00FFD2  0E00               	movlw	0
  1646   00FFD4                     u700:
  1647   00FFD4  6E26               	movwf	??_gpio_pin_direction_init^0,c
  1648   00FFD6  6A27               	clrf	(??_gpio_pin_direction_init+1)^0,c
  1649                           
  1650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1651                           ; Switch size 1, requested type "simple"
  1652                           ; Number of cases is 1, Range of values is 0 to 0
  1653                           ; switch strategies available:
  1654                           ; Name         Instructions Cycles
  1655                           ; simple_byte            4     3 (average)
  1656                           ;	Chosen strategy is simple_byte
  1657   00FFD8  5027               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1658   00FFDA  0A00               	xorlw	0	; case 0
  1659   00FFDC  B4D8               	btfsc	status,2,c
  1660   00FFDE  EFF3  F07F         	goto	l1706
  1661   00FFE2  EF7A  F07F         	goto	l1404
  1662   00FFE6                     l1706:
  1663                           
  1664                           ; Switch size 1, requested type "simple"
  1665                           ; Number of cases is 2, Range of values is 0 to 1
  1666                           ; switch strategies available:
  1667                           ; Name         Instructions Cycles
  1668                           ; simple_byte            7     4 (average)
  1669                           ;	Chosen strategy is simple_byte
  1670   00FFE6  5026               	movf	??_gpio_pin_direction_init^0,w,c
  1671   00FFE8  0A00               	xorlw	0	; case 0
  1672   00FFEA  B4D8               	btfsc	status,2,c
  1673   00FFEC  EF7E  F07F         	goto	l1406
  1674   00FFF0  0A01               	xorlw	1	; case 1
  1675   00FFF2  B4D8               	btfsc	status,2,c
  1676   00FFF4  EFAF  F07F         	goto	l1408
  1677   00FFF8  EF7A  F07F         	goto	l1404
  1678   00FFFC                     l1414:
  1679                           
  1680                           ;MCAL_Layer/hal_gpio.c: 38:     return ret;
  1681   00FFFC  502C               	movf	gpio_pin_direction_init@ret^0,w,c
  1682   00FFFE  0012               	return		;funcret
  1683   010000                     __end_of_gpio_pin_direction_init:
  1684                           	callstack 0
  1685   000000                     
  1686                           	psect	rparam
  1687   000000                     
  1688                           	psect	idloc
  1689                           
  1690                           ;Config register IDLOC0 @ 0x200000
  1691                           ;	unspecified, using default values
  1692   200000                     	org	2097152
  1693   200000  FF                 	db	255
  1694                           
  1695                           ;Config register IDLOC1 @ 0x200001
  1696                           ;	unspecified, using default values
  1697   200001                     	org	2097153
  1698   200001  FF                 	db	255
  1699                           
  1700                           ;Config register IDLOC2 @ 0x200002
  1701                           ;	unspecified, using default values
  1702   200002                     	org	2097154
  1703   200002  FF                 	db	255
  1704                           
  1705                           ;Config register IDLOC3 @ 0x200003
  1706                           ;	unspecified, using default values
  1707   200003                     	org	2097155
  1708   200003  FF                 	db	255
  1709                           
  1710                           ;Config register IDLOC4 @ 0x200004
  1711                           ;	unspecified, using default values
  1712   200004                     	org	2097156
  1713   200004  FF                 	db	255
  1714                           
  1715                           ;Config register IDLOC5 @ 0x200005
  1716                           ;	unspecified, using default values
  1717   200005                     	org	2097157
  1718   200005  FF                 	db	255
  1719                           
  1720                           ;Config register IDLOC6 @ 0x200006
  1721                           ;	unspecified, using default values
  1722   200006                     	org	2097158
  1723   200006  FF                 	db	255
  1724                           
  1725                           ;Config register IDLOC7 @ 0x200007
  1726                           ;	unspecified, using default values
  1727   200007                     	org	2097159
  1728   200007  FF                 	db	255
  1729                           
  1730                           	psect	config
  1731                           
  1732                           ; Padding undefined space
  1733   300000                     	org	3145728
  1734   300000  FF                 	db	255
  1735                           
  1736                           ;Config register CONFIG1H @ 0x300001
  1737                           ;	Oscillator Selection bits
  1738                           ;	OSC = HS, HS oscillator
  1739                           ;	Fail-Safe Clock Monitor Enable bit
  1740                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1741                           ;	Internal/External Oscillator Switchover bit
  1742                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1743   300001                     	org	3145729
  1744   300001  02                 	db	2
  1745                           
  1746                           ;Config register CONFIG2L @ 0x300002
  1747                           ;	Power-up Timer Enable bit
  1748                           ;	PWRT = OFF, PWRT disabled
  1749                           ;	Brown-out Reset Enable bits
  1750                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1751                           ;	Brown Out Reset Voltage bits
  1752                           ;	BORV = 1, 
  1753   300002                     	org	3145730
  1754   300002  09                 	db	9
  1755                           
  1756                           ;Config register CONFIG2H @ 0x300003
  1757                           ;	Watchdog Timer Enable bit
  1758                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1759                           ;	Watchdog Timer Postscale Select bits
  1760                           ;	WDTPS = 32768, 1:32768
  1761   300003                     	org	3145731
  1762   300003  1E                 	db	30
  1763                           
  1764                           ; Padding undefined space
  1765   300004                     	org	3145732
  1766   300004  FF                 	db	255
  1767                           
  1768                           ;Config register CONFIG3H @ 0x300005
  1769                           ;	CCP2 MUX bit
  1770                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1771                           ;	PORTB A/D Enable bit
  1772                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1773                           ;	Low-Power Timer1 Oscillator Enable bit
  1774                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1775                           ;	MCLR Pin Enable bit
  1776                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1777   300005                     	org	3145733
  1778   300005  83                 	db	131
  1779                           
  1780                           ;Config register CONFIG4L @ 0x300006
  1781                           ;	Stack Full/Underflow Reset Enable bit
  1782                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1783                           ;	Single-Supply ICSP Enable bit
  1784                           ;	LVP = OFF, Single-Supply ICSP disabled
  1785                           ;	Extended Instruction Set Enable bit
  1786                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1787                           ;	Background Debugger Enable bit
  1788                           ;	DEBUG = 0x1, unprogrammed default
  1789   300006                     	org	3145734
  1790   300006  81                 	db	129
  1791                           
  1792                           ; Padding undefined space
  1793   300007                     	org	3145735
  1794   300007  FF                 	db	255
  1795                           
  1796                           ;Config register CONFIG5L @ 0x300008
  1797                           ;	Code Protection bit
  1798                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1799                           ;	Code Protection bit
  1800                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1801                           ;	Code Protection bit
  1802                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1803                           ;	Code Protection bit
  1804                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1805   300008                     	org	3145736
  1806   300008  0F                 	db	15
  1807                           
  1808                           ;Config register CONFIG5H @ 0x300009
  1809                           ;	Boot Block Code Protection bit
  1810                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1811                           ;	Data EEPROM Code Protection bit
  1812                           ;	CPD = OFF, Data EEPROM not code-protected
  1813   300009                     	org	3145737
  1814   300009  C0                 	db	192
  1815                           
  1816                           ;Config register CONFIG6L @ 0x30000A
  1817                           ;	Write Protection bit
  1818                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1819                           ;	Write Protection bit
  1820                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1821                           ;	Write Protection bit
  1822                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1823                           ;	Write Protection bit
  1824                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1825   30000A                     	org	3145738
  1826   30000A  0F                 	db	15
  1827                           
  1828                           ;Config register CONFIG6H @ 0x30000B
  1829                           ;	Configuration Register Write Protection bit
  1830                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1831                           ;	Boot Block Write Protection bit
  1832                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1833                           ;	Data EEPROM Write Protection bit
  1834                           ;	WRTD = OFF, Data EEPROM not write-protected
  1835   30000B                     	org	3145739
  1836   30000B  E0                 	db	224
  1837                           
  1838                           ;Config register CONFIG7L @ 0x30000C
  1839                           ;	Table Read Protection bit
  1840                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1841                           ;	Table Read Protection bit
  1842                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1843                           ;	Table Read Protection bit
  1844                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1845                           ;	Table Read Protection bit
  1846                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1847   30000C                     	org	3145740
  1848   30000C  0F                 	db	15
  1849                           
  1850                           ;Config register CONFIG7H @ 0x30000D
  1851                           ;	Boot Block Table Read Protection bit
  1852                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1853   30000D                     	org	3145741
  1854   30000D  40                 	db	64
  1855                           tosu	equ	0xFFF
  1856                           tosh	equ	0xFFE
  1857                           tosl	equ	0xFFD
  1858                           stkptr	equ	0xFFC
  1859                           pclatu	equ	0xFFB
  1860                           pclath	equ	0xFFA
  1861                           pcl	equ	0xFF9
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           prodh	equ	0xFF4
  1867                           prodl	equ	0xFF3
  1868                           indf0	equ	0xFEF
  1869                           postinc0	equ	0xFEE
  1870                           postdec0	equ	0xFED
  1871                           preinc0	equ	0xFEC
  1872                           plusw0	equ	0xFEB
  1873                           fsr0h	equ	0xFEA
  1874                           fsr0l	equ	0xFE9
  1875                           wreg	equ	0xFE8
  1876                           indf1	equ	0xFE7
  1877                           postinc1	equ	0xFE6
  1878                           postdec1	equ	0xFE5
  1879                           preinc1	equ	0xFE4
  1880                           plusw1	equ	0xFE3
  1881                           fsr1h	equ	0xFE2
  1882                           fsr1l	equ	0xFE1
  1883                           bsr	equ	0xFE0
  1884                           indf2	equ	0xFDF
  1885                           postinc2	equ	0xFDE
  1886                           postdec2	equ	0xFDD
  1887                           preinc2	equ	0xFDC
  1888                           plusw2	equ	0xFDB
  1889                           fsr2h	equ	0xFDA
  1890                           fsr2l	equ	0xFD9
  1891                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        35
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     18      68
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_write_logic@_pin_config_t	PTR const struct . size(2) Largest target is 1
		 -> relay_turn_off@relayy(COMRAM[1]), relay_turn_on@relayy(COMRAM[1]), relay_initialize@relayy(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), Dc_motor_stop@dc_motor_pin_2(COMRAM[1]), Dc_motor_stop@dc_motor_pin_1(COMRAM[1]), 
		 -> Dc_motor_turn_right@dc_motor_pin_2(COMRAM[1]), Dc_motor_turn_right@dc_motor_pin_1(COMRAM[1]), Dc_motor_turn_left@dc_motor_pin_2(COMRAM[1]), Dc_motor_turn_left@dc_motor_pin_1(COMRAM[1]), 
		 -> Dc_motor_initialize@dc_motor_pin_2(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_1(COMRAM[1]), 

    gpio_pin_direction_init@_pin_config_t	PTR const struct . size(2) Largest target is 1
		 -> relay_initialize@relayy(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_2(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_1(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    Dc_motor_stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(COMRAM[2]), dc_motor_1(COMRAM[2]), 

    Dc_motor_turn_right@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(COMRAM[2]), dc_motor_1(COMRAM[2]), 

    Dc_motor_turn_left@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(COMRAM[2]), dc_motor_1(COMRAM[2]), 

    Dc_motor_initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(COMRAM[2]), dc_motor_1(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_Dc_motor_turn_left
    _Dc_motor_turn_right->_gpio_pin_write_logic
    _Dc_motor_turn_left->_gpio_pin_write_logic
    _Dc_motor_stop->_gpio_pin_write_logic
    _Application_initialize->_Dc_motor_initialize
    _Dc_motor_initialize->_gpio_pin_direction_init
    _Dc_motor_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11625
                                             16 COMRAM     2     2      0
             _Application_initialize
                      _Dc_motor_stop
                 _Dc_motor_turn_left
                _Dc_motor_turn_right
 ---------------------------------------------------------------------------------
 (1) _Dc_motor_turn_right                                  6     4      2    2693
                                              9 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _Dc_motor_turn_left                                   8     6      2    2695
                                              9 COMRAM     7     5      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _Dc_motor_stop                                        6     4      2    2845
                                              9 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _Application_initialize                               0     0      0    3392
                _Dc_motor_initialize
 ---------------------------------------------------------------------------------
 (2) _Dc_motor_initialize                                  6     4      2    3392
                                              9 COMRAM     6     4      2
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    2313
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              9     7      2     581
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_initialize
     _Dc_motor_initialize
       _gpio_pin_direction_init
       _gpio_pin_write_logic
   _Dc_motor_stop
     _gpio_pin_write_logic
   _Dc_motor_turn_left
     _gpio_pin_write_logic
   _Dc_motor_turn_right
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     12      44       1       53.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      39        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Sep 19 22:58:36 2022

                                  l30 FB46                                    l36 FC30  
                                  l45 FB26                                    l54 FA3E  
                                  l63 F95E                                    l39 FA5E  
                                  l48 F976                                    l57 F896  
                                 l170 FFFE                                   l260 FC36  
                                 l266 F824                                   l189 FE9C  
                                 u700 FFD4                                   u710 FD70  
                                 u711 FD6C                                   u640 FEB4  
                                 u720 FD8E                                   u641 FEB0  
                                 u721 FD8A                                   u650 FED2  
                                 u730 FDB0                                   u651 FECE  
                                 u731 FDAC                                   u660 FEF4  
                                 u820 F972                                   u661 FEF0  
                                 u805 FAAA                                   u821 F96E  
                                 u815 FB04                                   u807 FAAC  
                                 u744 FDD4                                   u760 FB3E  
                                 u745 FDD0                                   u761 FB3A  
                                 u817 FB06                                   u690 FFD2  
                                 u674 FF1C                                   u754 FE36  
                                 u850 F892                                   u691 FFCC  
                                 u675 FF18                                   u755 FE32  
                                 u851 F88E                                   u835 F9C2  
                                 u684 FF7E                                   u685 FF7A  
                                 u845 FA1C                                   u837 F9C4  
                                 u790 FA5A                                   u775 FB92  
                                 u791 FA56                                   u847 FA1E  
                                 u785 FBEC                                   u777 FB94  
                                 u865 F8E2                                   u787 FBEE  
                                 u875 F93C                                   u867 F8E4  
                                 u877 F93E           Dc_motor_stop@dc_motor_pin_1 0030  
         Dc_motor_stop@dc_motor_pin_2 0031                                   _ret 001F  
                                 prod 000FF3                   led_initialize@F2876 003C  
                                 wreg 000FE8                 relay_initialize@F2870 0038  
                                l1400 FEB4                                  l1402 FED2  
                                l1412 FFBA                                  l1404 FEF4  
                                l1500 FB06                                  l1406 FEFC  
                                l1414 FFFC                                  l1430 FDB0  
                                l1422 FD5E                                  l1502 FB16  
                                l1510 F972                                  l1408 FF5E  
                                l1432 FDB4                                  l1424 FD5E  
                                l1520 F9C8                                  l1512 F97A  
                                l1434 FE16                                  l1426 FD70  
                                l1450 FB4A                                  l1530 FA2E  
                                l1522 F9E4                                  l1514 F9B0  
                                l1506 F960                                  l1428 FD8E  
                                l1460 FBB4                                  l1452 FB80  
                                l1444 FB28                                  l1540 F89A  
                                l1524 FA06                                  l1516 F9B2  
                                l1508 F960                                  l1438 FE72  
                                l1470 FC06                                  l1462 FBD6  
                                l1454 FB82                                  l1446 FB2C  
                                l1550 F904                                  l1542 F8D0  
                                l1534 F880                                  l1526 FA08  
                                l1518 F9C4                                  l1704 FE86  
                                l1472 FC1A                                  l1464 FBD8  
                                l1456 FB94                                  l1448 FB3E  
                                l1552 F926                                  l1544 F8D2  
                                l1536 F880                                  l1480 FA48  
                                l1528 FA1E                                  l1706 FFE6  
                                l1466 FBEE                                  l1458 FB98  
                                l1474 FC2E                                  l1562 F808  
                                l1554 F928                                  l1546 F8E4  
                                l1538 F892                                  l1490 FAAC  
                                l1482 FA5A                                  l1396 FE9E  
                                l1468 FBFA                                  l1556 F93E  
                                l1548 F8E8                                  l1492 FAB0  
                                l1484 FA62                                  l1398 FEA2  
                                l1558 F94E                                  l1494 FACC  
                                l1486 FA98                                  l1478 FA40  
                                l1496 FAEE                                  l1488 FA9A  
                                l1680 FC7E                                  l1498 FAF0  
                                l1690 FCF6                                  l1682 FC8A  
                                l1674 FC32                                  l1692 FD1A  
                                l1684 FCAE                                  l1676 FC42  
                                l1694 FD32                                  l1686 FCC6  
                                l1678 FC5A                                  l1688 FCEA  
                                u1017 FC4C                                  u1027 FC70  
                                u1037 FC94                                  u1047 FCB8  
                                u1057 FCDC                                  u1067 FD00  
                                u1077 FD24                                  _LATA 000F89  
                                _LATB 000F8A                                  u1087 FD48  
                                _LATC 000F8B                                  _LATD 000F8C  
                                _LATE 000F8D                                  _main FC32  
                                fsr2h 000FDA                                  indf2 000FDF  
                                fsr1l 000FE1                                  fsr2l 000FD9  
            ?_gpio_pin_direction_init 0024                                  prodl 000FF3  
                                start 0000                   _Dc_motor_initialize FB28  
                        ___param_bank 000000                  _gpio_pin_write_logic FD5E  
                               ?_main 0024                   relay_turn_off@F2880 0036  
                               _PORTA 000F80                                 _PORTB 000F81  
                               _PORTC 000F82                                 _PORTD 000F83  
                               _PORTE 000F84                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                               _TRISD 000F95                                 _TRISE 000F96  
                ?_Dc_motor_initialize 002D                                 tablat 000FF5  
   Dc_motor_turn_right@dc_motor_pin_1 0030     Dc_motor_turn_right@dc_motor_pin_2 0031  
                               status 000FD8                       __initialization F84A  
         Dc_motor_turn_left@_dc_motor 002D                          __end_of_main FD5E  
               ?_gpio_pin_write_logic 0024                                ??_main 0034  
                       __activetblptr 000002                      led_turn_on@F2881 003B  
               ??_Dc_motor_initialize 002F                         _tris_register 0015  
                 _Dc_motor_turn_right F960               ?_Application_initialize 0024  
                              clear_0 F870                                isa$std 000001  
                        __pdataCOMRAM 0001                  ?_Dc_motor_turn_right 002D  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8                            __accesstop 0080  
             __end_of__initialization F876                         ___rparam_used 000001  
              ??_gpio_pin_write_logic 0027                        __pcstackCOMRAM 0024  
      __end_of_Application_initialize F826                 ??_Dc_motor_turn_right 002F  
                       _Dc_motor_stop F880            __end_of_Dc_motor_turn_left FB28  
                          _dc_motor_1 0022                            _dc_motor_2 0020  
                   led_turn_off@F2886 003A                Dc_motor_initialize@ret 0030  
            Dc_motor_initialize@F2875 0044              Dc_motor_initialize@F2877 0043  
                      ?_Dc_motor_stop 002D     Dc_motor_initialize@dc_motor_pin_1 0031  
   Dc_motor_initialize@dc_motor_pin_2 0032                               __Hparam 0000  
                             __Lparam 0000                               __pcinit F84A  
                             __ramtop 1000                               __ptext0 FC32  
                             __ptext1 F960                               __ptext2 FA40  
                             __ptext3 F880                               __ptext4 F808  
                             __ptext5 FB28                               __ptext6 FD5E  
                             __ptext7 FE9E                  end_of_initialization F876  
                       __Lmediumconst 0000     gpio_pin_write_logic@_pin_config_t 0024  
       Dc_motor_turn_left@logic_pin_1 0030         Dc_motor_turn_left@logic_pin_2 0031  
                             postdec1 000FE5                               postdec2 000FDD  
                             postinc0 000FEE                               postinc2 000FDE  
         __end_of_Dc_motor_initialize FC32                       ??_Dc_motor_stop 002F  
                  relay_turn_on@F2875 0037               _gpio_pin_direction_init FE9E  
                       __pidataCOMRAM F827                   start_initialization F84A  
                        _lat_register 000B                    _Dc_motor_turn_left FA40  
         __end_of_Dc_motor_turn_right FA40                   ?_Dc_motor_turn_left 002D  
                         __pbssCOMRAM 0036                  ??_Dc_motor_turn_left 002F  
           ??_gpio_pin_direction_init 0026             gpio_pin_write_logic@logic 0026  
        Dc_motor_turn_right@_dc_motor 002D              ??_Application_initialize 0033  
        Dc_motor_initialize@_dc_motor 002D                 led_toggle_logic@F2891 0039  
     __end_of_gpio_pin_direction_init 0000                             copy_data0 F85E  
                  Dc_motor_stop@F2900 003D                    Dc_motor_stop@F2898 003E  
                            __Hrparam 0000                              __Lrparam 0000  
               __end_of_Dc_motor_stop F960                Dc_motor_stop@_dc_motor 002D  
    Dc_motor_turn_left@dc_motor_pin_1 0032      Dc_motor_turn_left@dc_motor_pin_2 0033  
             Dc_motor_turn_left@F2884 0042               Dc_motor_turn_left@F2886 0041  
                            isa$xinst 000000  gpio_pin_direction_init@_pin_config_t 0024  
        __end_of_gpio_pin_write_logic FE9E              Dc_motor_turn_right@F2891 0040  
            Dc_motor_turn_right@F2893 003F                _Application_initialize F808  
          gpio_pin_direction_init@ret 002C                         _port_register 0001  
